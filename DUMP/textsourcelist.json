{
	"CAccountSettings":
	[
		{
			"Alias" : "AccountSettings",
			"IsStatic" : "true",
			"ReturnType" : "CAccountSettings",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AutoSaveInterval",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"val" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TutorialEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAchievementAsset":
	[
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Icon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Text",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AchievementAssetData",
			"IsStatic" : "true",
			"ReturnType" : "CAchievementAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Title",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAchievementManager":
	[
		{
			"Alias" : "Achievements",
			"IsStatic" : "true",
			"ReturnType" : "CAchievementManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Points",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UnlockAll",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UnlockByCategory",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"category" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CActiveTradeManager":
	[
		{
			"Alias" : "ActiveTrade",
			"IsStatic" : "true",
			"ReturnType" : "CActiveTradeManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TradeOffer",
			"IsStatic" : "false",
			"ReturnType" : "CActiveTradeOffer",
			"Comment" : "Returns the current trade offer for the current user. Should only be used for UI purposes",
			"Arguments" :
			{

			}
		}
	],
	"CActiveTradeOffer":
	[
		{
			"Alias" : "KontorTrader",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyTrader",
			"Comment" : "Returns the trader property of the participant who owns the kontor. Might be null if we trade with a second party",
			"Arguments" :
			{

			}
		}
	],
	"CAICheatHandler":
	[
		{
			"Alias" : "DebugCommand",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"command" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleIslandRole",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"area" :
				{
					"Type" : "rdint16"
				},
				"role" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DebugParticipant",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "OverwriteNextConstructionRequest",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"GUID" :
				{
					"Type" : "int"
				},
				"useToggleLogic" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ResetQuickBuildFilter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "QuickBuildFilter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"searchTerm" :
				{
					"Type" : "rdsdk::CRDString"
				}
			}
		},
		{
			"Alias" : "BuildUntil",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"GUID" :
				{
					"Type" : "int"
				},
				"useToggleLogic" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ResetBuildUntilFilter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuildUntilFilter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"searchTerm" :
				{
					"Type" : "rdsdk::CRDString"
				}
			}
		},
		{
			"Alias" : "FakeNoSpace",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"GUID" :
				{
					"Type" : "int"
				},
				"useToggleLogic" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ResetFakeNoSpaceFilter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FakeNoSpaceFilter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"searchTerm" :
				{
					"Type" : "rdsdk::CRDString"
				}
			}
		}
	],
	"CAIConstructionManager":
	[
		{
			"Alias" : "AiConstruction",
			"IsStatic" : "true",
			"ReturnType" : "CAIConstructionManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Cheats",
			"IsStatic" : "false",
			"ReturnType" : "CAICheatHandler",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAIGlobalCheatHandler":
	[
		{
			"Alias" : "DebugBuildMode",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"buildMode" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleDebugOption",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"option" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleStatisticsMarker",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"markerIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleStatisticsGraph",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"graphIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleStatisticsFlag",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"flagIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleStatisticsLocal",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAIMetaShipHandler":
	[
		{
			"Alias" : "SkipRequest",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReleaseShip",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"purpose" :
				{
					"Type" : "int"
				},
				"shipMetaObjID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleShipLog",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FulfillRequest",
			"IsStatic" : "false",
			"ReturnType" : "CGameObject",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "AIShipRequestID"
				}
			}
		}
	],
	"CAIUnitManager":
	[
		{
			"Alias" : "AiUnit",
			"IsStatic" : "true",
			"ReturnType" : "CAIUnitManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DebugCommand",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"command" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DebugParticipant",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleDebugOption",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"option" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CAnimalManager":
	[
		{
			"Alias" : "Animals",
			"IsStatic" : "true",
			"ReturnType" : "CAnimalManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SetDebugCommand",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Cycles through debug modes",
			"Arguments" :
			{
				"debugCommand" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleDebugOption",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"option" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CAreaAttractivityManager":
	[
		{
			"Alias" : "Attractivity",
			"IsStatic" : "true",
			"ReturnType" : "CAreaAttractivityManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Attractivity",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AttractivityType",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "datasets::AttractivityType type",
			"Arguments" :
			{
				"type" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CultureStatusFluff",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CityStatusMissingAttractivity",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NextCityStatusAttractivity",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CityStatus",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAreaEconomy":
	[
		{
			"Alias" : "TransporterQueue",
			"IsStatic" : "false",
			"ReturnType" : "UniquePtr<CTransporterQueue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StorageAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AvailableAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "StorageCapacity",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReservedStorageAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FreeSpace",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CurrentTransporterCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"transporterType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MaxTransporterCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"transporterType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AvailableTransporterCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"transporterType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TransporterQueue",
			"IsStatic" : "false",
			"ReturnType" : "UniquePtr<CTransporterQueue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AddAmount",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "See CLogisticNode::CheatAddStorageAmount",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				},
				"amount" :
				{
					"Type" : "ProductAmount"
				}
			}
		},
		{
			"Alias" : "AddAmount",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "See CLogisticNode::CheatAddStorageAmountAll",
			"Arguments" :
			{
				"amount" :
				{
					"Type" : "ProductAmount"
				}
			}
		},
		{
			"Alias" : "PopulationCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nPopulation Count",
			"Arguments" :
			{
				"populationLevelGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PopulationCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationLevels",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CPopulationAsset>",
			"Comment" : "Returns the assets for all settled population levels on this island. Skips populations with 0 residents.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Workforces",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CTextSourceListValue>",
			"Comment" : "Returns the assets for all workforces on this island. Skips types which provides 0 workforce.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsDistributionPaused",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				},
				"populationLevelGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AverageProductSatisfaction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "AverageProductSatisfactionTrend",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "Attractivity",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AttractivityType",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "datasets::AttractivityType type",
			"Arguments" :
			{
				"type" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CultureStatusFluff",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CityStatusMissingAttractivity",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NextCityStatusAttractivity",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CityStatus",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Satisfaction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Satisfaction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "EconomyModifier",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"index" :
				{
					"Type" : "int"
				},
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "EconomyModifier",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NeedLocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nNeeds",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "NeedUnlockPopulation",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "CheatItem",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nItem Container",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "StorageTrend",
			"IsStatic" : "false",
			"ReturnType" : "ProductAmount",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "CheatAddDelta",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nDelta",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				},
				"delta" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "Delta",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaProduction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the total registered production for a delta product. Returned value is positive.",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaProduction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"filterGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaProductionInverse",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"filterGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaConsumption",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the total registered consumption for a delta product. Returned value is negative.",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaConsumption",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns the registered consumption for the give filterGuid and productGuid",
			"Arguments" :
			{
				"filterGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "DeltaSaturation",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "DeltaSaturationUncapped",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "DeltaBonus",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "DeltaBonus",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"filterGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "ProductionDelta",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the delta of a given product. This is very expensive. Use with care!",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CAreaFestivalManager":
	[
		{
			"Alias" : "FestivalManager",
			"IsStatic" : "true",
			"ReturnType" : "CAreaFestivalManager",
			"Comment" : "",
			"Arguments" :
			{
				"areaID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RemainingDurationEstimation",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "Please note that this is just an estimation and therefore\nis not guaranteed to always decrease. This is due to the\nremaining time being influenced by the average island happiness",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IncreasePool",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TriggerFestival",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StopFestival",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BonusAttractiveness",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nTextsources for Infotips",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuffGuids",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<int>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProtectsFromIncidents",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAreaFetchManager":
	[
		{
			"Alias" : "AreaFetch",
			"IsStatic" : "true",
			"ReturnType" : "CAreaFetchManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAreaHappinessManager":
	[
		{
			"Alias" : "Happiness",
			"IsStatic" : "true",
			"ReturnType" : "CAreaHappinessManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GlobalNewspaperHappiness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns happiness impact of the last newspaper",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationNewspaperHappiness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the happiness impact for a given populationLevel of the last newspaper",
			"Arguments" :
			{
				"populationLevelGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TotalNewspaperHappiness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the total happiness impact for a given populationLevel of the last newspaper (global + population)",
			"Arguments" :
			{
				"populationLevelGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PollutionHappiness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the happiness impact of the pollution",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "WorkingConditionsHappiness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the happiness impact of the working conditions for the given population",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "WarfareHappiness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the happiness impact of the moral during the coastal warfare, return happy if no warfare",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "WarfareHappinessThreshold",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the threshold when the impact of the moral takes place",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StressedWorkforce",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the amount of workforce that are working in the given factory",
			"Arguments" :
			{
				"factoryGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "HappinessImpact",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the happiness impact of all factories of the given guid because of working conditions",
			"Arguments" :
			{
				"factoryGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AverageHappiness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the average happiness over all residences in this area",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AverageHappinessByPopulation",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the average happiness of a single",
			"Arguments" :
			{
				"populationLevel" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "StressFactories",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CTextSourceListValue>",
			"Comment" : "Returns a list with all the factories that have an impact on the happiness of the given population",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CAreaLoader":
	[
		{
			"Alias" : "Area",
			"IsStatic" : "true",
			"ReturnType" : "CAreaLoader",
			"Comment" : "temporary hack to not have to create the arealistmanager right now",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AreaFromID",
			"IsStatic" : "false",
			"ReturnType" : "CConstructionArea",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Area",
			"IsStatic" : "false",
			"ReturnType" : "CConstructionArea",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "AreaID"
				}
			}
		},
		{
			"Alias" : "Current",
			"IsStatic" : "false",
			"ReturnType" : "CConstructionArea",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentSelectedArea",
			"IsStatic" : "false",
			"ReturnType" : "CConstructionArea",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAreaManager":
	[
		{
			"Alias" : "AreaManager",
			"IsStatic" : "true",
			"ReturnType" : "CAreaManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Happiness",
			"IsStatic" : "false",
			"ReturnType" : "CAreaHappinessManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Railway",
			"IsStatic" : "false",
			"ReturnType" : "CAreaRailwayManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AreaObjects",
			"IsStatic" : "false",
			"ReturnType" : "CAreaObjectManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AreaFestival",
			"IsStatic" : "false",
			"ReturnType" : "CAreaFestivalManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AreaPopulation",
			"IsStatic" : "false",
			"ReturnType" : "CAreaPopulationManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AreaVisitors",
			"IsStatic" : "false",
			"ReturnType" : "CAreaVisitors",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAreaNeedUnlockManager":
	[
		{
			"Alias" : "AreaNeedUnlock",
			"IsStatic" : "true",
			"ReturnType" : "CAreaNeedUnlockManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeedLocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "NeedUnlockPopulation",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		}
	],
	"CAreaObjectManager":
	[
		{
			"Alias" : "SaveBuildingCountSnapshot",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAreaPopulationManager":
	[
		{
			"Alias" : "AreaPopulation",
			"IsStatic" : "true",
			"ReturnType" : "CAreaPopulationManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nPopulation",
			"Arguments" :
			{
				"populationLevelGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PopulationCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationLevels",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CPopulationAsset>",
			"Comment" : "Returns the assets for all settled population levels on this island. Skips populations with 0 residents.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HighestPopulationLevel",
			"IsStatic" : "false",
			"ReturnType" : "CPopulationAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FillAllResidencesOnIsland",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nCheats",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Satisfaction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Satisfaction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		}
	],
	"CAreaProductDeltaManager":
	[
		{
			"Alias" : "AreaProductDelta",
			"IsStatic" : "true",
			"ReturnType" : "CAreaProductDeltaManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatAddDelta",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				},
				"delta" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "Delta",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaProduction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the total registered production for a delta product. Returned value is positive.",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaProduction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"filterGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaProductionInverse",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"filterGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaConsumption",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the total registered consumption for a delta product. Returned value is negative.",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaConsumption",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns the registered consumption for the give filterGuid and productGuid",
			"Arguments" :
			{
				"filterGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "DeltaSaturation",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "DeltaSaturationUncapped",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "DeltaBonus",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "DeltaBonus",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"filterGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "ProductionDelta",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the delta of a given product. This is very expensive. Use with care!",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Workforces",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CTextSourceListValue>",
			"Comment" : "Returns the assets for all workforces on this island. Skips types which provides 0 workforce.",
			"Arguments" :
			{

			}
		}
	],
	"CAreaRailwayManager":
	[
		{
			"Alias" : "Railway",
			"IsStatic" : "true",
			"ReturnType" : "CAreaRailwayManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleDebugVisualization",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAreaResidenceConsumptionManager":
	[
		{
			"Alias" : "AreaResidenceConsumption",
			"IsStatic" : "true",
			"ReturnType" : "CAreaResidenceConsumptionManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsDistributionPaused",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				},
				"populationLevelGUID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CAreaVisitors":
	[
		{
			"Alias" : "EndInterval",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MaxVisitors",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentVisitors",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NextIntervalVisitorDelta",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RemainingIntervalTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AcceptSpecialistNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Accept",
			"Arguments" :
			{
				"removeNotification" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "DenySpecialistNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Deny",
			"Arguments" :
			{
				"removeNotification" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "SpawnSpecialist",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Spawn",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SpecialistSpawnProbability",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LookAtSpecialist",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAsset":
	[
		{
			"Alias" : "AssetData",
			"IsStatic" : "true",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Icon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Text",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CBlueprintManager":
	[
		{
			"Alias" : "Blueprint",
			"IsStatic" : "true",
			"ReturnType" : "CBlueprintManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UpgradeCostSelected",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CBuildCost":
	[
		{
			"Alias" : "Empty",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if every resource cost of this price is 0",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasInfluenceChanges",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this contains changes in influence tracking",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsPayable",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Costs",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CBuildCostEntry>",
			"Comment" : "Returns the individual cost positions for this buildcost object",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Icons",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<rdsdk::CRDStringW>",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nTODO: #localBuildCostVectors\nWe would like to get rid of the local vector-allocations within the following methods\nwe cannot use static variables anymore because of thread safety (multiple sessions could access these concurrently)\n///////////////////////////////////////////////////////////////////////",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Names",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<rdsdk::CRDStringW>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Values",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<int>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Payable",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<bool>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Available",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<int>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MoneyCost",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfluenceCost",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfluencePayable",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfluencePayback",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "if an object with this build costs get destroyed, how much influence would I get back?",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfluenceUsageCost",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CBuildCostEntry":
	[
		{
			"Alias" : "ProductGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Icon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Name",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsAffordable",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AvailableAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CBuildModeManager":
	[
		{
			"Alias" : "BuildMode",
			"IsStatic" : "true",
			"ReturnType" : "CBuildModeManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Costs",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "Returns the cost for the current build.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuildMode",
			"IsStatic" : "false",
			"ReturnType" : "CBuildModeObject",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentBuildMode",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CBuildModeObject":
	[
		{
			"Alias" : "IsInBlueprintMode",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsSnapped",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsTerrainTypeValid",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsOverlappingSameGUIDRadius",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasNeededFertility",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsMove",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsNotAdjacent",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "< true if a module should be build and it is not adjacent",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsAreaBlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "< true if a building cannot be build because the area is blocked",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsModuleLimitReached",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "< true if module limit reached",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Object",
			"IsStatic" : "false",
			"ReturnType" : "CGameObject",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CCheatManager":
	[
		{
			"Alias" : "Cheat",
			"IsStatic" : "true",
			"ReturnType" : "CCheatManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IncreaseCheatCount",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TriggerCheat",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TriggerCheatWithArgs",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "int"
				},
				"args" :
				{
					"Type" : "rdsdk::CRDString"
				}
			}
		},
		{
			"Alias" : "SetCheatCategory",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"category" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GlobalCheats",
			"IsStatic" : "false",
			"ReturnType" : "CGlobalCheats",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AICheats",
			"IsStatic" : "false",
			"ReturnType" : "CAIGlobalCheatHandler",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CCondition":
	[
		{
			"Alias" : "ConditionKey",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "Returns a unique string identifier for this condition",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SatisfyRecursiveNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Satisfies this condition and all subconditions",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolved",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the condition and all subconditions are resolved",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolvedSelf",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this condition has ended",
			"Arguments" :
			{

			}
		}
	],
	"CConditionGoodsInRange":
	[
		{
			"Alias" : "ConditionKey",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "Returns a unique string identifier for this condition",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SatisfyRecursiveNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Satisfies this condition and all subconditions",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolved",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the condition and all subconditions are resolved",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolvedSelf",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this condition has ended",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IDontHaveAPurposeAndAmOnlyNeededForTextSourceInheritance",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the delivery object",
			"Arguments" :
			{
				"objectIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DeliveryObject",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the delivery object",
			"Arguments" :
			{
				"objectIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CurrentDeliveryObject",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the delivery object of the current internal objective",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ExecutionObject",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the execution object",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the guid of the current object",
			"Arguments" :
			{

			}
		}
	],
	"CConditionGoodsInRangeBase":
	[
		{
			"Alias" : "ConditionKey",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "Returns a unique string identifier for this condition",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SatisfyRecursiveNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Satisfies this condition and all subconditions",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolved",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the condition and all subconditions are resolved",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolvedSelf",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this condition has ended",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IDontHaveAPurposeAndAmOnlyNeededForTextSourceInheritance",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CConditionInStorage":
	[
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the guid of the current object",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CConditionItemActionCompleted":
	[
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the guid of the current object",
			"Arguments" :
			{

			}
		}
	],
	"CConditionItemUsed":
	[
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the desired amount",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the current amount",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the template event data as a string for the UI",
			"Arguments" :
			{

			}
		}
	],
	"CConditionManager":
	[
		{
			"Alias" : "Conditions",
			"IsStatic" : "true",
			"ReturnType" : "CConditionManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RegisteredCondition",
			"IsStatic" : "false",
			"ReturnType" : "SharedPtr<CCondition>",
			"Comment" : "Returns a pointer to the main condition registered for a key",
			"Arguments" :
			{
				"key" :
				{
					"Type" : "rdsdk::CRDString"
				}
			}
		},
		{
			"Alias" : "RegisterTrigger",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Registers a trigger defined in ToolOne including all subtriggers based on GUID and PropertyType. Extend here for more PropertyTypes!",
			"Arguments" :
			{
				"assetGUID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CConditionModuleBuildingEfficiency":
	[
		{
			"Alias" : "ConditionKey",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "Returns a unique string identifier for this condition",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SatisfyRecursiveNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Satisfies this condition and all subconditions",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolved",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the condition and all subconditions are resolved",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolvedSelf",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this condition has ended",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MaxModules",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the desired amount",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentModules",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the current amount",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the template event data as a string for the UI",
			"Arguments" :
			{

			}
		}
	],
	"CConditionMoveVehicle":
	[
		{
			"Alias" : "TargetShip",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get GUID of first Vehicle",
			"Arguments" :
			{

			}
		}
	],
	"CConditionObjectSelected":
	[
		{
			"Alias" : "Object",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get a GUID based on the current objectGUID or any objectID",
			"Arguments" :
			{

			}
		}
	],
	"CConditionPhotographObject":
	[
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the GUID of one photograph objects",
			"Arguments" :
			{

			}
		}
	],
	"CConditionPlayerCounter":
	[
		{
			"Alias" : "CurrentAmount",
			"IsStatic" : "false",
			"ReturnType" : "StatsValue",
			"Comment" : "Returns the current value of the counter.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "\\see CConditionPlayerCounterBase::GetContext",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "StatsValue",
			"Comment" : "Get the current call amount\nGet amount",
			"Arguments" :
			{

			}
		}
	],
	"CConditionQuestBringVehicleToObject":
	[
		{
			"Alias" : "ReceiveItemsNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Gives the items to the placer and fulfills the condition",
			"Arguments" :
			{

			}
		}
	],
	"CConditionQuestDestroy":
	[
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the desired amount",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the current amount",
			"Arguments" :
			{

			}
		}
	],
	"CConditionQuestEscort":
	[
		{
			"Alias" : "Survivors",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the number of survivors needed to fulfill this quest",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentSurvivors",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the current number of survivors",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EscortTarget",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the guid of the move target object of the escort objects",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the current number of survivors",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ActivateEscortNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Starts the actual escort",
			"Arguments" :
			{

			}
		}
	],
	"CConditionQuestExpedition":
	[
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CConditionQuestFollowShip":
	[
		{
			"Alias" : "WarningCountdown",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "Returns the time left until the quest fails",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ActivateFollowShipNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Starts the actual escort",
			"Arguments" :
			{

			}
		}
	],
	"CConditionQuestHitMovingTarget":
	[
		{
			"Alias" : "AddItemsToShipInRangeNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemPlace",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the object GUID where the start item can be obtained",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HitTarget",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the item GUID that needs to be used",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Item",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemAmountCurrent",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the number of items that were obtained (currently either 0 or 1)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the number of items that need to be obtained (currently always 1)",
			"Arguments" :
			{

			}
		}
	],
	"CConditionQuestSmuggler":
	[
		{
			"Alias" : "WarningCountdown",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "Returns the time left until the quest fails",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ActivateTradingRaceQuestNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Starts the actual trading race",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentDeliveryObject",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Starts the actual trading race",
			"Arguments" :
			{
				"subObjectiveKey" :
				{
					"Type" : "rdsdk::CRDString"
				}
			}
		},
		{
			"Alias" : "PerformItemTradeNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Performs item trading at the given trading station",
			"Arguments" :
			{
				"tradingStationIndex" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CConditionQuestSustain":
	[
		{
			"Alias" : "CurrentAmount",
			"IsStatic" : "false",
			"ReturnType" : "StatsValue",
			"Comment" : "Returns the current value of the player counter condition.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the context of the player counter condition.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "StatsValue",
			"Comment" : "Returns the amount of the player counter condition.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TimeLimit",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "Returns the time limit of the timer condition.",
			"Arguments" :
			{

			}
		}
	],
	"CConditionQuestUseItemInArea":
	[
		{
			"Alias" : "AddItemsToShipInRangeNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemPlace",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the object GUID where the start item can be obtained",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Item",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the item GUID that needs to be used",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemAmountCurrent",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the number of items that were obtained (currently either 0 or 1)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the number of items that need to be obtained (currently always 1)",
			"Arguments" :
			{

			}
		}
	],
	"CConditionShipsInRange":
	[
		{
			"Alias" : "ConditionKey",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "Returns a unique string identifier for this condition",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SatisfyRecursiveNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Satisfies this condition and all subconditions",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolved",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the condition and all subconditions are resolved",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolvedSelf",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this condition has ended",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IDontHaveAPurposeAndAmOnlyNeededForTextSourceInheritance",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the guid of the current object",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ExecutionObject",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the execution object",
			"Arguments" :
			{

			}
		}
	],
	"CConditionShipsInRangeBase":
	[
		{
			"Alias" : "ConditionKey",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "Returns a unique string identifier for this condition",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SatisfyRecursiveNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Satisfies this condition and all subconditions",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolved",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the condition and all subconditions are resolved",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolvedSelf",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this condition has ended",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IDontHaveAPurposeAndAmOnlyNeededForTextSourceInheritance",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CConditionTimer":
	[
		{
			"Alias" : "TimeLimit",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "\\see CConditionTimerBase::GetTimeLimit",
			"Arguments" :
			{

			}
		}
	],
	"CConstructionArea":
	[
		{
			"Alias" : "ID",
			"IsStatic" : "false",
			"ReturnType" : "AreaID",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ShareCost",
			"IsStatic" : "false",
			"ReturnType" : "SharedPtr<CBuildCost>",
			"Comment" : "",
			"Arguments" :
			{
				"shareIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SellPrice",
			"IsStatic" : "false",
			"ReturnType" : "SharedPtr<CBuildCost>",
			"Comment" : "",
			"Arguments" :
			{
				"shareIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TakeoverCost",
			"IsStatic" : "false",
			"ReturnType" : "SharedPtr<CBuildCost>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TakeoverChance",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TakeoverMinimum",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuyShareCooldownRemaining",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuyShareCooldownTime",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResetCooldown",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsBuyShareBlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuyShare",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				},
				"shareIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SellShare",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"shareIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PercentOwnedShares",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AmountOwnedShares",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"shareIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AmountOfShares",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OwnerProfile",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"shareIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "OwnerName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IncomePerShare",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"shareIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TotalIncome",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TotalDebt",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsTakeoverBlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HostileTakeover",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReserveIslandInt",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nReservation & Owner",
			"Arguments" :
			{
				"reservationOwner" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ClearReservation",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ReservationOwnerName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ReservationCost",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Owner",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsOwnedByAnyone",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsOwnedByCurrentParticipant",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "KontorCost",
			"IsStatic" : "false",
			"ReturnType" : "SharedPtr<CBuildCost>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ObjectsWithGUIDCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsDuplicate",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "returns true if the given guid has a uniqueness constraint which\nis not met",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "KontorID",
			"IsStatic" : "false",
			"ReturnType" : "GameObjectID",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsFireUnlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nIncident",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsRiotUnlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsIllnessUnlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsExplosionUnlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Fertilities",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<int>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Lodes",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<int>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CityName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Economy",
			"IsStatic" : "false",
			"ReturnType" : "CAreaEconomy",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TotalShareIncome",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Visitors",
			"IsStatic" : "false",
			"ReturnType" : "CAreaVisitors",
			"Comment" : "this is just a helper method for accessing the AreaVisitors\nthis actually just calls the VisitorManager",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PassiveTrade",
			"IsStatic" : "false",
			"ReturnType" : "CPassiveTradeController",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasTradeRights",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the current participant has trade rights to the owner of this area. Returns true if current participant is owner. Returns false if there is no owner",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IslandWarActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "WarTimer",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MilitaryTakeoverCurrentMorale",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MilitaryTakeoverCurrentSurrenderChance",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MilitaryTakeoverChanceStart",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OpenMilitaryResultScreen",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsNextWarBlocked",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MilitaryTakeoverInfluenceCost",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"alwaysPositive" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "MilitaryTakeoverSpareInfluenceCost",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CCorporationStats":
	[
		{
			"Alias" : "Counter",
			"IsStatic" : "false",
			"ReturnType" : "rdint64",
			"Comment" : "Used by the TextSources, calls GetCounter()",
			"Arguments" :
			{
				"counterValueType" :
				{
					"Type" : "int"
				},
				"playerCounter" :
				{
					"Type" : "int"
				},
				"context" :
				{
					"Type" : "int"
				},
				"counterScope" :
				{
					"Type" : "int"
				},
				"scopeContext" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CDebugRenderManager":
	[
		{
			"Alias" : "DebugRender",
			"IsStatic" : "true",
			"ReturnType" : "CDebugRenderManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleShowQuestHint",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Toggles the m_ShowCollectables flag",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SeedRandomArea",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SeedRandomArea",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"v" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "MainSizeRandomArea",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MainSizeRandomArea",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"v" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "LocalSizeRandomArea",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LocalSizeRandomArea",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"v" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "LocalInfluenceRandomArea",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LocalInfluenceRandomArea",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"v" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "ChanceRandomArea",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ChanceRandomArea",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"v" :
				{
					"Type" : "float"
				}
			}
		}
	],
	"CDesyncRecoverFlow":
	[
		{
			"Alias" : "DesyncRecover",
			"IsStatic" : "true",
			"ReturnType" : "CDesyncRecoverFlow",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CDifficultyHelper":
	[
		{
			"Alias" : "DifficultyHelper",
			"IsStatic" : "true",
			"ReturnType" : "CDifficultyHelper",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DifficultySelection",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"category" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DifficultySelection",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"category" :
				{
					"Type" : "int"
				},
				"selection" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DifficultySelectionAsBool",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"category" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DifficultySelectionAsBool",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"category" :
				{
					"Type" : "int"
				},
				"selection" :
				{
					"Type" : "bool"
				}
			}
		}
	],
	"CDiscoveryManager":
	[
		{
			"Alias" : "Discovery",
			"IsStatic" : "true",
			"ReturnType" : "CDiscoveryManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DebugCommand",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"command" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleDebugOption",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"option" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ShowAll",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Discovers the whole map for the given player",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HideAll",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Hides the whole map for the given player",
			"Arguments" :
			{

			}
		}
	],
	"CEconomyManager":
	[
		{
			"Alias" : "Economy",
			"IsStatic" : "true",
			"ReturnType" : "CEconomyManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleDebugInfo",
			"IsStatic" : "true",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MetaStorage",
			"IsStatic" : "false",
			"ReturnType" : "CMetaEconomy",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"populationLevelGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PopulationLevels",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::PoolPtr<Vector>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Delta",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaProduction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaProduction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"filterGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaConsumption",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaConsumption",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"filterGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		}
	],
	"CExpedition":
	[
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ThreatDescription",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "description of threats",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Threats",
			"IsStatic" : "false",
			"ReturnType" : "Vector<int>",
			"Comment" : "get the threats of this expedition",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ExpeditionShipStarting",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "returns true when the expedition state is starting",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ExpeditionShipReturning",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "returns true when the expedition state is returning",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EventCountdown",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "get remaining pause time until next event starts",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatEventCountdown",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatCurrentEvent",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"eventIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatSetCurrentDecision",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "change current decision to another",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CurrentEvent",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "get guid of current event (or the upcoming event)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResolveDecision",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "choose a decision option",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "EndExpedition",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "accept expedition result",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MaxStartMoralePoints",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StartMoralePoints",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Morale",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns remaining morale relative to maximal possible morale (which depends on difficulty of expedition) [0..100]",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Morale",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "change remaining morale while expedition is already running",
			"Arguments" :
			{
				"percent" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DiscardExpedition",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "discard expedition before starting it",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Requirement",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"optionGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RequirementConsumeAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"optionGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Days",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OpenEventUI",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OptionAttributeSum",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"optionGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "OptionAttributeLevel",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"optionGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "OptionAttributeLevelDescription",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"optionGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TravelTimeLeft",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CFactoryAsset":
	[
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Icon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Text",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FactoryAssetData",
			"IsStatic" : "true",
			"ReturnType" : "CFactoryAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "HasProduction",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Production",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasConsumption",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Consumption",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CFeedbackManager":
	[
		{
			"Alias" : "Feedback",
			"IsStatic" : "true",
			"ReturnType" : "CFeedbackManager",
			"Comment" : "we want GetManagerMutable inline and TextSourceParser does not support it yet to define it here, so its defined below in this .h",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HideFeedbackInArea",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Hide specific Feedback in Area. Should only be used by content design (as we use name as identifier here. Better usage: Register it directly at PerBuildingAreaFeedback)",
			"Arguments" :
			{
				"name" :
				{
					"Type" : "rdsdk::CRDString"
				},
				"centerX" :
				{
					"Type" : "int"
				},
				"centerZ" :
				{
					"Type" : "int"
				},
				"radius" :
				{
					"Type" : "int"
				},
				"hideTrains" :
				{
					"Type" : "bool"
				},
				"hideVehicles" :
				{
					"Type" : "bool"
				},
				"hidePersons" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "UnHideFeedbackInArea",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Name as identifier: Should only be used by content design",
			"Arguments" :
			{
				"name" :
				{
					"Type" : "rdsdk::CRDString"
				}
			}
		},
		{
			"Alias" : "BehaviourFilter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"behaviourType" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CFetchSavegameFlow":
	[
		{
			"Alias" : "SavegameFetcher",
			"IsStatic" : "true",
			"ReturnType" : "CFetchSavegameFlow",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FetchSavegameErrorCode",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CFullscreenMovieQueueManager":
	[
		{
			"Alias" : "FullscreenMovieQueueManager",
			"IsStatic" : "true",
			"ReturnType" : "CFullscreenMovieQueueManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EnqueueMovieGUID",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Enqueues a new video to the queue",
			"Arguments" :
			{
				"val" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CGameClock":
	[
		{
			"Alias" : "CorporationTime",
			"IsStatic" : "false",
			"ReturnType" : "CorporationTime",
			"Comment" : "returns the logical time in ms since game start (sum of all game deltas)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GameClock",
			"IsStatic" : "true",
			"ReturnType" : "CGameClock",
			"Comment" : "returns the singleton instance",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SetGameSpeed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Apply a multiplier to increase game-speed",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "rduint"
				}
			}
		},
		{
			"Alias" : "IncreaseGameSpeed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DecreaseGameSpeed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RelativePauseTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "Returns the time [in ms] since the pause was started. Returns 0 if no pause is active",
			"Arguments" :
			{

			}
		}
	],
	"CGameHelperClasses":
	[
		{
			"Alias" : "LocaHelper",
			"IsStatic" : "false",
			"ReturnType" : "CLocaHelper",
			"Comment" : "returns the LocaHelper object for audio language operations",
			"Arguments" :
			{

			}
		}
	],
	"CGameManager":
	[
		{
			"Alias" : "LocaHelper",
			"IsStatic" : "false",
			"ReturnType" : "CLocaHelper",
			"Comment" : "returns the LocaHelper object for audio language operations",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SaveGameWithPopup",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SaveGame",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Game",
			"IsStatic" : "true",
			"ReturnType" : "CGameManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SetDebugUploadSnapshot",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"set" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "SetDebugDownloadSnapshot",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"set" :
				{
					"Type" : "bool"
				}
			}
		}
	],
	"CGameObject":
	[
		{
			"Alias" : "Attackable",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyAttackable",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Attacker",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyAttacker",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Collectable",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyCollectable",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CommandQueue",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyCommandQueue",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ConstructionAI",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyConstructionAI",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DelayedConstruction",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyDelayedConstruction",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Distribution",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyDistribution",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Dying",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyDying",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Factory",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyFactory7",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Electric",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyElectric",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Mesh",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyMesh",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Nameable",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyNameable",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FreeArea",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyFreeAreaProductivity",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Pausable",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyPausable",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Repair",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyRepairCrane",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Residence",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyResidence7",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Monument",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyMonument",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Pirate",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyPirate",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Warehouse",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyWarehouse",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Walking",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyWalking",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IncidentResolver",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyIncidentResolver",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemGenerator",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyItemGenerator",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemContainer",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyItemContainer",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ModuleOwner",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyModuleOwner",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Shipyard",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyShipyard",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TradeRouteVehicle",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyTradeRouteVehicle",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Trader",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyTrader",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "VisitorHarbor",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyVisitorHarbor",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Lifetime",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyLifetime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ShipIncident",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyShipIncident",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ShipMaintenance",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyShipMaintenance",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Maintenance",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyMaintenance",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Sellable",
			"IsStatic" : "false",
			"ReturnType" : "CPropertySellable",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Infectable",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyIncidentInfectable",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Logistic",
			"IsStatic" : "false",
			"ReturnType" : "CLogisticNode",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the GUID of the object.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Static",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Move",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"posX" :
				{
					"Type" : "float"
				},
				"posY" :
				{
					"Type" : "float"
				},
				"posZ" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "Upgrade",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"forcedByCheat" :
				{
					"Type" : "bool"
				},
				"all" :
				{
					"Type" : "bool"
				},
				"showUpgradeCostsNotification" :
				{
					"Type" : "bool"
				},
				"playUpgradeSound" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "Downgrade",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsDowngradable",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsBlueprunt",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Upgradability",
			"IsStatic" : "false",
			"ReturnType" : "CUpgradabilityChecker",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Renovatability",
			"IsStatic" : "false",
			"ReturnType" : "CRenovatabilityChecker",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Owner",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsOwnedByCurrentParticipant",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Area",
			"IsStatic" : "false",
			"ReturnType" : "CConstructionArea",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AreaManager",
			"IsStatic" : "false",
			"ReturnType" : "CAreaManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Expedition",
			"IsStatic" : "false",
			"ReturnType" : "CExpedition",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CGameObjectManager":
	[
		{
			"Alias" : "Objects",
			"IsStatic" : "true",
			"ReturnType" : "CGameObjectManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Object",
			"IsStatic" : "false",
			"ReturnType" : "CGameObject",
			"Comment" : "Returns the object with the specified id or nullptr if it does not exist",
			"Arguments" :
			{
				"objectID" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "ObjectByName",
			"IsStatic" : "false",
			"ReturnType" : "CGameObject",
			"Comment" : "Returns an object that has the given label assigned",
			"Arguments" :
			{
				"label" :
				{
					"Type" : "rdsdk::CRDString"
				}
			}
		},
		{
			"Alias" : "DebugObject",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Debug",
			"Arguments" :
			{
				"objectID" :
				{
					"Type" : "rduint64"
				}
			}
		}
	],
	"CGameSetupManager":
	[
		{
			"Alias" : "GameSetup",
			"IsStatic" : "true",
			"ReturnType" : "CGameSetupManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DifficultyNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"categoryID" :
				{
					"Type" : "int"
				},
				"setting" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SetPlayerPossession",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"peer" :
				{
					"Type" : "int"
				},
				"playerPossession" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ResetPlayerPossession",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"peer" :
				{
					"Type" : "int"
				},
				"playerPossession" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsMultiPlayerGame",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "only if 2 or more human players are configured, it is considered as multi player game.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsNextCampaignActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RandomSeed",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RandomSeed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "sets the random seed",
			"Arguments" :
			{
				"seed" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "InitNewRandomSeed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "chooses a new random number for the seed",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SettingsFileName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GetSettingsName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SetSettingsName",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"name" :
				{
					"Type" : "rdsdk::CRDStringW"
				}
			}
		},
		{
			"Alias" : "SetSettingsName",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LoadSettings",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "load advanced settings from file",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SaveSettings",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "save advanced settings to file",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DifficultyPreset",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"difficulty" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CGameToolOneDataHelper":
	[
		{
			"Alias" : "ToolOneDataHelper",
			"IsStatic" : "true",
			"ReturnType" : "CGameToolOneDataHelper",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UnlockTriggerForAsset",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get GUID of Trigger that unlock given GUID. Returns INVALID_GUID if no Trigger found.",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CGenericPopupManager":
	[
		{
			"Alias" : "Popup",
			"IsStatic" : "true",
			"ReturnType" : "CGenericPopupManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ClosePopup",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"buttonID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RefGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CGlobalCheats":
	[
		{
			"Alias" : "IgnoreBuildingCosts",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleIgnoreBuildingCosts",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IgnoreFertilities",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleIgnoreFertilities",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsUndiscoveredDisabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DisableUndiscovered",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IncidentsDisabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleIncidents",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SuperShipSpeedEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleSuperShipSpeed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ConstructionAIEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleConstructionAIEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsStartWithConstructionAIDebuggingEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StartWithConstructionAIDebugging",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DeferExpensiveEconomy",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleDeferExpensiveEconomy",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleFluidResidentSettleBehaviour",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EconomySpeed",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EconomySpeed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "ToggleDeferExpensiveQuestSystem",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsProductivityCheated",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleProductivity",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsElectricityCheated",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleElectricity",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsAttackDebugView",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleAttackDebugView",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsLOSDebugView",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleLOSDebugView",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleUnlockAllForHumans",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsWinLoseConditionsDisabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DisableWinLoseConditions",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleExtendedDebugging",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"debuggingType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "EnableRealWindSystem",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EnableHardFarms",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CGUIManager":
	[
		{
			"Alias" : "GUI",
			"IsStatic" : "true",
			"ReturnType" : "CGUIManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TogglePause",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatToggleUIState",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "CHEAT: Toggles the visibility of a UI state",
			"Arguments" :
			{
				"stateName" :
				{
					"Type" : "rdsdk::CRDString"
				}
			}
		}
	],
	"CIncidentChances":
	[
		{
			"Alias" : "TotalChance",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SubChances",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CIncidentChanceSourceDesc>",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CIncidentChanceSourceDesc":
	[
		{
			"Alias" : "SubChance",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TextGuid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IconGuid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CIncidentManager":
	[
		{
			"Alias" : "Incidents",
			"IsStatic" : "true",
			"ReturnType" : "CIncidentManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DebugMode",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"mode" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DebugRenderMode",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"renderMode" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DebugIncidentType",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"type" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleRenderFlag",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"flag" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TogglePause",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleSpreading",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleDontSendResolver",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleUnlockIncident",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"incidentIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatUnlockAllIncidents",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Incident",
			"IsStatic" : "false",
			"ReturnType" : "IIncident",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "IncidentID"
				}
			}
		},
		{
			"Alias" : "InfectionChanceSourceNotificationText",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"typeIndex" :
				{
					"Type" : "int"
				},
				"sourceIndex" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CInfoTipContextValue":
	[
		{
			"Alias" : "AsInt",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AsFloat",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AsBool",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AsString",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CInfoTipManager":
	[
		{
			"Alias" : "InfoTip",
			"IsStatic" : "true",
			"ReturnType" : "CInfoTipManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RefGuid",
			"IsStatic" : "true",
			"ReturnType" : "int",
			"Comment" : "Returns the last valid Reference Guid of a widget. The reference guid still exists after the mouse leaves this widget.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SetRefGuid",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RefOid",
			"IsStatic" : "true",
			"ReturnType" : "GameObjectID",
			"Comment" : "Returns the last valid Reference Object ID of a widget. The reference guid still exists after the mouse leaves this widget.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SetRefOid",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "GameObjectID"
				}
			}
		},
		{
			"Alias" : "ContextValue",
			"IsStatic" : "false",
			"ReturnType" : "CInfoTipContextValue",
			"Comment" : "",
			"Arguments" :
			{
				"name" :
				{
					"Type" : "rdsdk::CRDStringW"
				}
			}
		},
		{
			"Alias" : "IsContextValueSet",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"name" :
				{
					"Type" : "rdsdk::CRDStringW"
				}
			}
		},
		{
			"Alias" : "IsContextEmpty",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CInputManager":
	[
		{
			"Alias" : "InputManager",
			"IsStatic" : "true",
			"ReturnType" : "CInputManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ShortcutTooltip",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"identifier" :
				{
					"Type" : "rdsdk::CRDString"
				}
			}
		},
		{
			"Alias" : "HasShortcutTooltip",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"identifier" :
				{
					"Type" : "rdsdk::CRDString"
				}
			}
		}
	],
	"CItemAsset":
	[
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Icon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Text",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemAssetData",
			"IsStatic" : "true",
			"ReturnType" : "CItemAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Allocation",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AllocationTextGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemOrBuffEffectTargetsFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AdditionalOutputAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AdditionalOutputProduct",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AdditionalOutputCycle",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AdditionalOutputCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AdditionalOutputProductsFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ReplaceInputOldInput",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReplaceInputOldInputsFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ReplaceInputNewInput",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReplaceInputNewInputsFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ReplaceInputCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SpecialistSpawnProbabilityIfPercent",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InputBenefitModifierCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InputBenefitModifierProduct",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "InputBenefitModifierAdditionalSupply",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "InputBenefitModifierAdditionalHappiness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "InputBenefitModifierAdditionalMoney",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsInputBenefitModifierProvidingAnySupply",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsInputBenefitModifierProvidingAnyHappiness",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsInputBenefitModifierProvidingAnyMoney",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InputBenefitAllAdditionalSupplyFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InputBenefitAllAdditionalHappinessFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InputBenefitAllAdditionalMoneyFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GoodConsumptionCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GoodConsumptionProvidedNeed",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GoodConsumptionAmountInPercent",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GoodConsumptionAmountProvidedInPercent",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GoodConsumptionAllProvidedNeedsFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PirateFlagActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "WhiteFlagActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProjectileInnerDamage",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProjectileOuterDamageRadius",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UsedProjectile",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeedProvidesNeedCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AllProvidedNeedsFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AllSubstituteNeedsFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AddAssemblyOptionsCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AddAssemblyOptionsFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ReplaceAssemblyOptionsCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ReplaceAssemblyOptionsNewFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ReplacingWorkforce",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GoodGenerationProbability",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GoodGenerationPoolFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BlockBuyingShares",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BlockHostileTakeover",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HappinessIgnoresMorale",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EnablesSelfHealDuringCombat",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResolverUnitCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nResolver Units",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResolverUnitDecreaseRateInPercent",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResolverUnitMovementSpeedInPercent",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SpecialUnitHappinessThresholdUpgrade",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AddedFertility",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsItemActionNuke",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsItemActionKamikaze",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AreaTolerance",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsUsingMoraleDamageEffect",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsUsingHitpointDamageEffect",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CItemSessionManager":
	[
		{
			"Alias" : "Item",
			"IsStatic" : "true",
			"ReturnType" : "CItemSessionManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuffFluff",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatItem",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DraggedItemGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CLoadingPierManager":
	[
		{
			"Alias" : "LoadingPier",
			"IsStatic" : "true",
			"ReturnType" : "CLoadingPierManager",
			"Comment" : "we want GetManagerMutable inline and TextSourceParser does not support it yet to define it here, so its defined below in this .h",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DebugDrawing",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"draw" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "UpdateHarbourQueuePointsDebug",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"coastlineID" :
				{
					"Type" : "rduint64"
				}
			}
		}
	],
	"CLocaHelper":
	[
		{
			"Alias" : "SelectProfile",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"profileGuid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CLogisticNode":
	[
		{
			"Alias" : "TransporterQueue",
			"IsStatic" : "false",
			"ReturnType" : "UniquePtr<CTransporterQueue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StorageAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AvailableAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "StorageCapacity",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReservedStorageAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FreeSpace",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CurrentTransporterCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"transporterType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MaxTransporterCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"transporterType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AvailableTransporterCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"transporterType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TransporterQueue",
			"IsStatic" : "false",
			"ReturnType" : "UniquePtr<CTransporterQueue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CMetaEconomy":
	[
		{
			"Alias" : "TransporterQueue",
			"IsStatic" : "false",
			"ReturnType" : "UniquePtr<CTransporterQueue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StorageAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AvailableAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "StorageCapacity",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReservedStorageAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FreeSpace",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CurrentTransporterCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"transporterType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MaxTransporterCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"transporterType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AvailableTransporterCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"transporterType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TransporterQueue",
			"IsStatic" : "false",
			"ReturnType" : "UniquePtr<CTransporterQueue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EconomyModifier",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				},
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "EconomyModifier",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AddAmount",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "See CLogisticNode::CheatAddStorageAmount",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				},
				"amount" :
				{
					"Type" : "ProductAmount"
				}
			}
		},
		{
			"Alias" : "AddAmount",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "See CLogisticNode::CheatAddStorageAmountAll",
			"Arguments" :
			{
				"amount" :
				{
					"Type" : "ProductAmount"
				}
			}
		}
	],
	"CMetaGameLoader":
	[
		{
			"Alias" : "SaveGameWithPopup",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SaveGame",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CMetaGameManager":
	[
		{
			"Alias" : "MetaGameManager",
			"IsStatic" : "true",
			"ReturnType" : "CMetaGameManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CMetaGameObject":
	[
		{
			"Alias" : "Profile",
			"IsStatic" : "false",
			"ReturnType" : "CMetaPropertyProfile",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Diplomacy",
			"IsStatic" : "false",
			"ReturnType" : "CMetaPropertyDiplomacy",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ConstructionAI2",
			"IsStatic" : "false",
			"ReturnType" : "CMetaPropertyConstructionAI",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProfileCounter",
			"IsStatic" : "false",
			"ReturnType" : "CMetaPropertyProfileCounter",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "KontorOwner",
			"IsStatic" : "false",
			"ReturnType" : "CMetaPropertyKontorOwner",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuyShares",
			"IsStatic" : "false",
			"ReturnType" : "CMetaPropertyBuyShares",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the GUID of the object.",
			"Arguments" :
			{

			}
		}
	],
	"CMetaGameObjectManager":
	[
		{
			"Alias" : "MetaObjects",
			"IsStatic" : "true",
			"ReturnType" : "CMetaGameObjectManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SessionGameObject",
			"IsStatic" : "false",
			"ReturnType" : "CSessionScopedPointer<CGameObject>",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "GameObjectID"
				}
			}
		},
		{
			"Alias" : "Object",
			"IsStatic" : "false",
			"ReturnType" : "CMetaGameObject",
			"Comment" : "this method returns an object with the given objectID\nthis should not be used ingame it\'s mainly intended for\ntextsources as the strict typedef is problematic there",
			"Arguments" :
			{
				"objectID" :
				{
					"Type" : "rduint"
				}
			}
		},
		{
			"Alias" : "CheatLookAtObject",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"gameObjectID" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "LookAtObject",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"sessionObjectID" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "CheatLookAtPosition",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"sessionGUID" :
				{
					"Type" : "int"
				},
				"x" :
				{
					"Type" : "float"
				},
				"y" :
				{
					"Type" : "float"
				},
				"z" :
				{
					"Type" : "float"
				}
			}
		}
	],
	"CMetaPropertyBuyShares":
	[
		{
			"Alias" : "CalcPrio",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CMetaPropertyConstructionAI":
	[
		{
			"Alias" : "MetaShipHandler",
			"IsStatic" : "false",
			"ReturnType" : "CAIMetaShipHandler",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatEnterNextSession",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatEnterSession",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"sessionGUID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CMetaPropertyDiplomacy":
	[
		{
			"Alias" : "War",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"otherParticipantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Alliance",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"otherParticipantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SendSmallGift",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"targetParticipantIndex" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CMetaPropertyExpeditionUser":
	[
		{
			"Alias" : "Expedition",
			"IsStatic" : "true",
			"ReturnType" : "CMetaPropertyExpeditionUser",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ByGUID",
			"IsStatic" : "false",
			"ReturnType" : "CExpedition",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AddExpedition",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "player gained access to an expedition (e.g. unlock or received an expedition item)",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"add" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "DistributeExpedition",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"progressLevel" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExpeditionCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ExpeditionByShip",
			"IsStatic" : "false",
			"ReturnType" : "CExpedition",
			"Comment" : "returns the expedition this ship is assigned to",
			"Arguments" :
			{
				"shipID" :
				{
					"Type" : "GameObjectID"
				}
			}
		},
		{
			"Alias" : "CheatSetCurrentDecision",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Tracker",
			"IsStatic" : "false",
			"ReturnType" : "CExpedition",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Overview",
			"IsStatic" : "false",
			"ReturnType" : "CExpedition",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Event",
			"IsStatic" : "false",
			"ReturnType" : "CExpedition",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FeedOptionMoraleCostFactor",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CMetaPropertyInfluence":
	[
		{
			"Alias" : "MetaInfluence",
			"IsStatic" : "true",
			"ReturnType" : "CMetaPropertyInfluence",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SpentInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"influenceUsage" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "UsedPoints",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"influenceUsage" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "InfluenceGainOnNextLevel",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfluenceCategory",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SpentInfluencePerCategory",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FreePoints",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"influenceUsage" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FreeProgress",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"influenceUsage" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FreeRemainingInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"influenceUsage" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FreeTotalInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"influenceUsage" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ResidenceInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProfileLevelInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MinInfluenceNeededToReachBuff",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"buffGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CategoryOfBuff",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"buffGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "BaseInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CharterInfluencePayback",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CMetaPropertyKontorOwner":
	[
		{
			"Alias" : "ImperialKontor",
			"IsStatic" : "false",
			"ReturnType" : "CGameObject",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "KontorSwitchCooldown",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsKontorSwitchCooldownFinished",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CMetaPropertyMaintenance":
	[
		{
			"Alias" : "MetaMaintenance",
			"IsStatic" : "true",
			"ReturnType" : "CMetaPropertyMaintenance",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OwnShipMaintenance",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RentedShipMaintenance",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CMetaPropertyProfile":
	[
		{
			"Alias" : "CompanyName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "///////////////////////////////////////////////////////////////////////",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AvatarPortraitIcon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AvatarPortrait",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CompanyLogoGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Level",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Level",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"level" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IncreaseLevel",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationRequirementForNextLevel",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CMetaPropertyProfileCounter":
	[
		{
			"Alias" : "Stats",
			"IsStatic" : "false",
			"ReturnType" : "CCorporationStats",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CMilitaryManager":
	[
		{
			"Alias" : "Military",
			"IsStatic" : "true",
			"ReturnType" : "CMilitaryManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleDebugDraw",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CNewspaper":
	[
		{
			"Alias" : "Article",
			"IsStatic" : "false",
			"ReturnType" : "CNewspaperArticle",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Volume",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the volume of this newspaper. The very first newspaper starts at volume 1",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsPublished",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this newspaper was already published",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsPartOfNewspaper",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the given article is part of the newspaper if it would be published now",
			"Arguments" :
			{
				"articleID" :
				{
					"Type" : "NewspaperID"
				}
			}
		},
		{
			"Alias" : "EditTimer",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "Returns the time the user has to edit the last newspaper",
			"Arguments" :
			{

			}
		}
	],
	"CNewspaperArticle":
	[
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "CNewspaperContext",
			"Comment" : "Returns the game context for this article",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Headline",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the TextGUID of the Headline based on the state of this article",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Subline",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the TextGUID of the Subline based on the state of this article",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Image",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the path to the image based on the position and state of this article",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the guid of this article",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfluenceCosts",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the influence costs that has to be paid to replace a gameplay article by this article. Only valid for propaganda articles, otherwise 0",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EffectValue",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the value of an effect. The affected system is responsible for the interpretation of this value",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EffectValueAsConstructionTime",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the value of an effect interpreted as construction time (see T1: ProductionTimeToConstructionTimeMultiplier). Only the war preparation effect will return a meaningful value here",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsUnlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the guid of this article is unlocked in the unlockmanager",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ArticleName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the name (category or description like \'War propaganda\')",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EffectName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the name of the effect (category or description like \'Satisfaction effect\')",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EffectCategoryName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the name of the effect category (category or description like \'War Preparation\')",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EffectValueText",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the value of the effect as a text e.g. \'+10%\'",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EffectDescription",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the description of the effect as flufftext",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsPropaganda",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the type of this article is a propaganda article",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsFiller",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the type of this article is a filler article",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsGameplay",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the type of this article is a gameplay article",
			"Arguments" :
			{

			}
		}
	],
	"CNewspaperContext":
	[
		{
			"Alias" : "ParticipantName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TownName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ObjectName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Owner",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OwnerName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CNewspaperManager":
	[
		{
			"Alias" : "Newspaper",
			"IsStatic" : "true",
			"ReturnType" : "CNewspaperManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AddNewsArticle",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"articleGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CreateNewspaper",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Creates a newspaper for the current participant or a given participant. The user can now edit or publish the newspaper",
			"Arguments" :
			{
				"triggerPamsyMessages" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "GetNewspaper",
			"IsStatic" : "false",
			"ReturnType" : "CNewspaper",
			"Comment" : "Returns the newspaper with the given id",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "NewspaperID"
				}
			}
		},
		{
			"Alias" : "FindArticle",
			"IsStatic" : "false",
			"ReturnType" : "CNewspaperArticle",
			"Comment" : "Returns the article with the given ID for the current participant",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "NewspaperID"
				}
			}
		},
		{
			"Alias" : "IsPartOfNewspaper",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true of the given article id is used in any newspaper of the current participant",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "NewspaperID"
				}
			}
		},
		{
			"Alias" : "ShowLatestNewspaperUI",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Opens the newspaper UI for the latest newspaper of the current participant",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Publish",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "NewspaperID"
				}
			}
		},
		{
			"Alias" : "ActiveEffectValue",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"effectType" :
				{
					"Type" : "int"
				},
				"contextGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ActiveEffectValuePropagandaSensitive",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"effectType" :
				{
					"Type" : "int"
				},
				"triggeredByPropaganda" :
				{
					"Type" : "bool"
				},
				"contextGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ActiveEffectValueText",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"effectType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ActiveEffectName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"effectType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RiotImpactByPropaganda",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the riot increase for the given population based on the current newspaper effects.",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "HappinessImpactByPropaganda",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the happiness increase for the given population based on the current newspaper effects.",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CNotificationEventListener":
	[
		{
			"Alias" : "TriggerHappyDay",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Cheat Function for testing special Day messages...",
			"Arguments" :
			{
				"day" :
				{
					"Type" : "int"
				},
				"month" :
				{
					"Type" : "int"
				},
				"year" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "UnixTriggerHappyDay",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"timeString" :
				{
					"Type" : "rdsdk::CRDString"
				}
			}
		},
		{
			"Alias" : "TimeNotification",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Cheat Function for testing Time Notification messages...",
			"Arguments" :
			{
				"minutes" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "TimeNotification",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CNotificationManager":
	[
		{
			"Alias" : "Notifications",
			"IsStatic" : "true",
			"ReturnType" : "CNotificationManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Current",
			"IsStatic" : "false",
			"ReturnType" : "INotification",
			"Comment" : "Returns the next active notification of the specified type",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ByID",
			"IsStatic" : "false",
			"ReturnType" : "INotification",
			"Comment" : "Returns the notification with the given ID",
			"Arguments" :
			{
				"notificationID" :
				{
					"Type" : "NotificationID"
				}
			}
		},
		{
			"Alias" : "NotificationListener",
			"IsStatic" : "false",
			"ReturnType" : "CNotificationEventListener",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PlayTime",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"seconds" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CNotificationTypeCharacter":
	[
		{
			"Alias" : "Value",
			"IsStatic" : "false",
			"ReturnType" : "CTextSourceObjectWrapper",
			"Comment" : "",
			"Arguments" :
			{
				"key" :
				{
					"Type" : "rdsdk::CRDStringW"
				}
			}
		},
		{
			"Alias" : "CharacterGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Gets / Sets the character GUID",
			"Arguments" :
			{

			}
		}
	],
	"CNotRenovatableContext":
	[
		{
			"Alias" : "Locked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UnderAttack",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IslandUnderAttack",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EnemyNearby",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfectionProximity",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MaterialMissing",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CNotUpgradableContext":
	[
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AmountInt",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AmountFloat",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasNoUpgrade",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfectionProximity",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TargetLocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeedLocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SatisfactionInsufficient",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationInsufficient",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MaterialMissing",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CityStatusInsufficient",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CityUnderAttack",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CityEnemyNearby",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"COMOffer":
	[
		{
			"Alias" : "Currency01Asset",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Currency01Costs",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"feeFactor" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "Currency02Asset",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Currency02Costs",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"feeFactor" :
				{
					"Type" : "float"
				}
			}
		}
	],
	"COMTradeActive":
	[
		{
			"Alias" : "CanBuy",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Currency01Asset",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Currency01Costs",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"feeFactor" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "Currency02Asset",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Currency02Costs",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"feeFactor" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "IsFriendOffer",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"isFriend" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "GoodOfferGUID",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AccountId",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UplayName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"COMTradeBought":
	[
		{
			"Alias" : "GoodOfferGUID",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"COnlineEventManager":
	[
		{
			"Alias" : "OnlineEvents",
			"IsStatic" : "true",
			"ReturnType" : "COnlineEventManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "QuestHandler",
			"IsStatic" : "false",
			"ReturnType" : "COnlineEventQuestHandler",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleEventTradeAvailability",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EventProgress",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TryClaimPhaseReward",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"phaseIndex" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"COnlineEventQuestHandler":
	[
		{
			"Alias" : "ResetDailyQuests",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResetPhaseQuest",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"COnlineInventoryManager":
	[
		{
			"Alias" : "OnlineInventory",
			"IsStatic" : "true",
			"ReturnType" : "COnlineInventoryManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GenerateOnlineEventItem",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LastOpenedChestItemGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"COnlineManager":
	[
		{
			"Alias" : "Online",
			"IsStatic" : "true",
			"ReturnType" : "COnlineManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LastUplayErrorMessage",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InternetAvailability",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InternetErrorText",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InternetErrorCode",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MatchMakingAvailability",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MatchMakingErrorText",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MatchMakingErrorCode",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OnlineMarketAvailability",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RendezVousErrorText",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RendezVousErrorCode",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UbiservicesAvailability",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UbiservicesErrorText",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UbiservicesErrorCode",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UplayAvailability",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UplayErrorText",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UplayErrorCode",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StormAvailability",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StormErrorText",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StormErrorCode",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RoutingAvailability",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RoutingErrorText",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RoutingErrorCode",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PunchAvailability",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PunchErrorText",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PunchErrorCode",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LastError",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LastLeftPlayer",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LastInviter",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PlayerName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{
				"slotIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PlayerColor",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{
				"slotIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PlayerTeam",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{
				"slotIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NATType",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AnimatedEllipsis",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Ping",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CancelJoin",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "tries to join a given session",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AcceptInvite",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DeclineInvite",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"COnlineMarketManager":
	[
		{
			"Alias" : "OnlineMarket",
			"IsStatic" : "true",
			"ReturnType" : "COnlineMarketManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TryBuyItem",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"slotIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PollOnlineMarketPrice",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Polls an updated list of all item prices",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PollTradeListStatus",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Polls the current status of all open offer",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PushOffer",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nNetwork - Push\n///////////////////////////////////////////////////////////////////////",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleAvailability",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Reroll",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"COptionsManager":
	[
		{
			"Alias" : "Options",
			"IsStatic" : "true",
			"ReturnType" : "COptionsManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ShortcutInUse",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CommandInUse",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OptionsConfirmPopupTime",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleFullscreen",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "toggles between window mode and fullscreen mode",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Resolution",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Resolution",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "WindowMode",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "WindowMode",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DirectX",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DirectX",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GraphicAdapter",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GraphicAdapter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GraphicsQuality",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GraphicsQuality",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Gamma",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Gamma",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "VSync",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "VSync",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "AntiAlias",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AntiAlias",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Texture",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Texture",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Shader",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Shader",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Lighting",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Lighting",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Shadow",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Shadow",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Water",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Water",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Posteffects",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Posteffects",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Object",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Object",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ViewDistance",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ViewDistance",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Terrain",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Terrain",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FixSunPosition",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FixSunPosition",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "Feedback",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Feedback",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MasterVolume",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MasterVolume",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "UIVolume",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UIVolume",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "MusicVolume",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MusicVolume",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "VoiceVolume",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "VoiceVolume",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "SFXVolume",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SFXVolume",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "TextLanguage",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TextLanguage",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AudioLanguage",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AudioLanguage",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SubtitlesEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SubtitlesEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "RightclickMenuEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RightclickMenuEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "FreeCameraEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FreeCameraEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "BuildGridEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuildGridEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "InfolayerEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfolayerEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "AutoSaveInterval",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AutoSaveInterval",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "UpgradeInfolayerEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UpgradeInfolayerEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ConstructionHighlightEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ConstructionHighlightEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "AutoBlueprintEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AutoBlueprintEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "TutorialEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TutorialEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "EdgeScrollingEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EdgeScrollingEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		}
	],
	"CParticipantManager":
	[
		{
			"Alias" : "Participants",
			"IsStatic" : "true",
			"ReturnType" : "CParticipantManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Participant",
			"IsStatic" : "false",
			"ReturnType" : "CMetaGameObject",
			"Comment" : "",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Current",
			"IsStatic" : "false",
			"ReturnType" : "CMetaGameObject",
			"Comment" : "Returns the current participant. May be overridden by cheats.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ParticipantName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ParticipantLogo",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatCreateParticipant_IfNecessary",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SetCurrentParticipant",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SetCurrentParticipantFromSelection",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatLetSelectedAIEnterNewSession",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatCounterProposal",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CloseBorders",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"participantIDOne" :
				{
					"Type" : "int"
				},
				"participantIDTwo" :
				{
					"Type" : "int"
				},
				"close" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "CheatTotalWar",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatTotalTrade",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatAlliance",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatDiplomacyTime",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OpenCounterProposal",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"initialOfferId" :
				{
					"Type" : "int"
				},
				"countererId" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AcceptCounterProposal",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"initialOfferId" :
				{
					"Type" : "int"
				},
				"countererId" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CanAcceptCounterProposal",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"initialOfferId" :
				{
					"Type" : "int"
				},
				"countererId" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IgnoreCounterProposal",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"initialOfferId" :
				{
					"Type" : "int"
				},
				"countererId" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DeclareWar",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"sourceId" :
				{
					"Type" : "int"
				},
				"targetId" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CancelAlliance",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"sourceId" :
				{
					"Type" : "int"
				},
				"targetId" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CancelProtection",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"sourceId" :
				{
					"Type" : "int"
				},
				"targetId" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CancelDoubleProtection",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"sourceId" :
				{
					"Type" : "int"
				},
				"targetId1" :
				{
					"Type" : "int"
				},
				"targetId2" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DoesNeedWar",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"sourceId" :
				{
					"Type" : "int"
				},
				"protectedId" :
				{
					"Type" : "int"
				},
				"needsWarId" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ParticipantReputation",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ParticipantReputationTo",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				},
				"Target" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "PeaceSuccess",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TradeRightsSuccess",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SupportFleetSuccess",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AllianceSuccess",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FlatterSuccess",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "InsultSuccess",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GiftSmallSuccess",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GiftSmallSize",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GiftOrdinarySuccess",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GiftGenerousSuccess",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CeasefireSuccess",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NonAttack",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RequestPeaceDebuffActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RequestTradeRightsDebuffActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RequestAllianceDebuffActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RequestCeaseFireDebuffActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RequestNonAttackDebuffActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NonAttackDuration",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "< returns default non attack pact duration",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CeaseFireDuration",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "< returns default cease fire pact duration",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RemainingNonAttackDuration",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "< Returns how long the non attack pact with the given participant is going to last (0 if none)",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RemainingNonAttackDurationTo",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "< Returns how long the non attack pact with the given participant is going to last (0 if none)",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				},
				"Target" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "RemainingCeaseFireDuration",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "< Returns how long the cease fire pact with the given participant is going to last (0 if none)",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RemainingCeaseFireDurationTo",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "< Returns how long the cease fire pact with the given participant is going to last (0 if none)",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				},
				"Target" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "CheckDiplomacyState",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "< Returns true if the current participant and the given participant have the given diplomacyState",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				},
				"diplomacyState" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheckDiplomacyStateTo",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "< Returns true if the current participant and the given participant have the given diplomacyState",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				},
				"Target" :
				{
					"Type" : "rduint64"
				},
				"diplomacyState" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TopLevelDiplomacyState",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "< Returns Alliance, Trade Rights, Peace, or War (or invalid) state between the current participant and the given participant",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TopLevelDiplomacyStateTo",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "< Returns Alliance, Trade Rights, Peace, or War (or invalid) state between the current participant and the given participant",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				},
				"Target" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "DiplomacyBaseUserIsCurrent",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "< Returns true, if in diplomacymenu the perspective of current participant is shown",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RemoveParticipant",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPassiveTradeController":
	[
		{
			"Alias" : "BuyPrice",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the global price when passive trader buys items or goods",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SellPrice",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the global price when passive trader sells items or goods.If shipID is given, price reducing items will be considered",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"shipID" :
				{
					"Type" : "GameObjectID"
				}
			}
		},
		{
			"Alias" : "Offer",
			"IsStatic" : "false",
			"ReturnType" : "CPassiveTradeOffer",
			"Comment" : "Returns the passive trade offer for the good with the given id",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Offers",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CPassiveTradeOffer>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasOffer",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if for the given guid a offer exists",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "BuyOffers",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTradeOfferInfo>",
			"Comment" : "Fills the given vector with all goods this trader buys currently",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SellOffers",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTradeOfferInfo>",
			"Comment" : "Fills the given vector with all goods this trader sells currently. If a shipID is given, item (specialists) for price reduction will be considered",
			"Arguments" :
			{
				"shipID" :
				{
					"Type" : "GameObjectID"
				}
			}
		}
	],
	"CPassiveTradeOffer":
	[
		{
			"Alias" : "IsSellOnly",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsBuyOnly",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsBuyOrSell",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsPreferedGood",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPathManager":
	[
		{
			"Alias" : "Path",
			"IsStatic" : "true",
			"ReturnType" : "CPathManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DebugCommand",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"command" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleDebugOption",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"option" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DebugLayer",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"layer" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPauseManager":
	[
		{
			"Alias" : "Pause",
			"IsStatic" : "true",
			"ReturnType" : "CPauseManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsPaused",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Toggle",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IncreaseGameSpeed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DecreaseGameSpeed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Paused",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PausedInMenu",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Continued",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Played",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FastForward",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TripleFastForward",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPopulationAsset":
	[
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Icon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Text",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationAssetData",
			"IsStatic" : "true",
			"ReturnType" : "CPopulationAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Workforce",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CProductAmount":
	[
		{
			"Alias" : "Product",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CProductAsset":
	[
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Icon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Text",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductAssetData",
			"IsStatic" : "true",
			"ReturnType" : "CProductAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsWorkforce",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsAbstract",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsDeltaOnly",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsValid",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Has to be filled by code. Not filled when static accessed",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AvailableAmount",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Has to be filled by code. Not filled when static accessed",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Available",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Invalid when static accessed",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AllowedInCurrentRegion",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this product is associated with the current region",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AllowedInRegion",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the product is associated with the given region",
			"Arguments" :
			{
				"regionIndex" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPropertyAttackable":
	[
		{
			"Alias" : "MaxHitPoints",
			"IsStatic" : "false",
			"ReturnType" : "short",
			"Comment" : "Returns the maximum hit points. More lightweight than the method above.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurHitPoints",
			"IsStatic" : "false",
			"ReturnType" : "short",
			"Comment" : "Returns the current amount of hit points",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AddDamagePercent",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Adds percental damage",
			"Arguments" :
			{
				"damagePercent" :
				{
					"Type" : "float"
				},
				"damageDealerOwner" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AddDamagePercent",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Adds percental heal",
			"Arguments" :
			{
				"healPercent" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "SetDebugInvincible",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Object won\'t take damage from attacks anymore",
			"Arguments" :
			{
				"invincible" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "IsWhiteFlagActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this unit is currently using the white flag active item",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsUnderAttack",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyAttacker":
	[
		{
			"Alias" : "BaseDamage",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Damage",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ReloadTime",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NewspaperFireRateIncrease",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns fire rate increase by newspaper effects, e.g. 0.2 for +20%.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DPS",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyBuilding":
	[
		{
			"Alias" : "HasUpgrade",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true, if this building has an upgrade target",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyCollectable":
	[
		{
			"Alias" : "CanBeCollected",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Tells if the object can be collected currently",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsTargetStorageFull",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsTargetStoragePartiallyFull",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GetGoodsAddedToStorage",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CanBeDropped",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Tells if the object can be dropped currently",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CollectAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get / Set the collected count, i.e. the number of times that this object has to be collected",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyCommandQueue":
	[
		{
			"Alias" : "HasPatrolAssignment",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasExpeditionAssignment",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasTradeRouteAssignment",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UI_IsMoving",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nUI Helper functions\n///////////////////////////////////////////////////////////////////////",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UI_IsNonMoving",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UI_IsInCombat",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UI_IsChosenOrOutOnExpedition",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UI_IsHoldingQuestObject",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UI_IsPatrolling",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UI_IsLeavingTheSession",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UI_IsInATradeRoute",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UI_IsEscorting",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyConstructionAI":
	[
		{
			"Alias" : "GrantSettlePermissionNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"accepted" :
				{
					"Type" : "bool"
				}
			}
		}
	],
	"CPropertyDelayedConstruction":
	[
		{
			"Alias" : "RemainingConstructionTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatReady",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyDistribution":
	[
		{
			"Alias" : "DistributionAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPropertyDying":
	[
		{
			"Alias" : "PropertyID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "\\see CTickableGameObjectProperty::GetPropertyID()",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyElectric":
	[
		{
			"Alias" : "ElectricityFactor",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BoostFactor",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OilPumpsNeeded",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OilPumpsAvailable",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BoostedByElectricity",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeedsElectricity",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyFactory7":
	[
		{
			"Alias" : "FillStorage",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CycleTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RelativeCycleTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Progress",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Productivity",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductivityUpgrade",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NewspaperProductivityIncrease",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns productivity increase by newspaper effects, e.g. 0.2 for +20%",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FullOutputStorage",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentProductivity",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the productivity at right this instant. For most purposes, use GetProductivity instead, which includes delay effects.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NoWarehouseInRange",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if there is not a single connection to a warehouse the range of this factory",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeededFertility",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeedsAFertility",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasNeededFertility",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleCheatFertility",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EconomyModifier",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"modifier" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPropertyFreeAreaProductivity":
	[
		{
			"Alias" : "Productivity",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatReady",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RemainingInitializeForestTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyIncidentInfectable":
	[
		{
			"Alias" : "IsGettingHealed",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResetProtection",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"incidentTypeIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsInfected",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "< returns true if the building is infected by any incident",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FireInfectionChance",
			"IsStatic" : "false",
			"ReturnType" : "CIncidentChances",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nText source stuff",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RiotInfectionChance",
			"IsStatic" : "false",
			"ReturnType" : "CIncidentChances",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IllnessInfectionChance",
			"IsStatic" : "false",
			"ReturnType" : "CIncidentChances",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ExplosionInfectionChance",
			"IsStatic" : "false",
			"ReturnType" : "CIncidentChances",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyIncidentResolver":
	[
		{
			"Alias" : "IsSpecialActionActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResolverStates",
			"IsStatic" : "false",
			"ReturnType" : "Vector<IncidentResolverState>",
			"Comment" : "returns the states of all existing standard resolver",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SpecialResolverStates",
			"IsStatic" : "false",
			"ReturnType" : "Vector<IncidentResolverState>",
			"Comment" : "returns the states of all special resolver",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CanSendSpecialForces",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RemainingActionCooldown",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ActionCooldown",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ClearSpecialActionCooldown",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SpecialUnitAsset",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StandardUnitAsset",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfectionChance",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Warning this method is not cheap",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ActionAdditionalUnitAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ActionMaxAdditionalUnitAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResolverPopulationThreshold",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"resolverIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ResolverHappinessThreshold",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"resolverIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ActionNewspaperHappinessBonus",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ActionUpgradeHappinessBonus",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsFireInstitution",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsRiotInstitution",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsIllnessInstitution",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsIncidentNearby",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsActionOnCooldown",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DoesAnybodyNearbyNeedHelp",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Note: this is not cheap",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsPotentialAvailableSpecialUnitIndex",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "this returns true if the index of the special unit given as parameter is in a valid range",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPropertyItemContainer":
	[
		{
			"Alias" : "CheatItemInSlot",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"amount" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ClearSlot",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "EquipSlot",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"slotIndex" :
				{
					"Type" : "int"
				},
				"targetSocketIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "UnequipSocket",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"socketIndex" :
				{
					"Type" : "int"
				},
				"targetSlotIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatItemInSocket",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"socketIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ResetSocketState",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"socketIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AcceptGeneratedItem",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DenyGeneratedItem",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StackLimit",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Cargo",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Sockets",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CAsset>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DraggedItemAlreadyEquipped",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DraggedItemAlreadyExclusive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyItemGenerator":
	[
		{
			"Alias" : "SkipGenerationTime",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "< Sets the end interval of the specified itemGenerator to the current time.",
			"Arguments" :
			{
				"generatorItemGUID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPropertyLifetime":
	[
		{
			"Alias" : "RemainingTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyMaintenance":
	[
		{
			"Alias" : "MaintenanceCost",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "StaticMaintenanceCost",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleConsumerPriorityAlarm",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DeltaConsumption",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nDeltas",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DeltaInputSaturation",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the current workforce productivity",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyMesh":
	[
		{
			"Alias" : "LocalWind",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "sets local Wind on/off (blazing sails)",
			"Arguments" :
			{
				"on" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ShortenSails",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "sets shortened sails on/off",
			"Arguments" :
			{
				"shorten" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "Visible",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "shows or hides the mesh",
			"Arguments" :
			{
				"isVisible" :
				{
					"Type" : "bool"
				}
			}
		}
	],
	"CPropertyMetaPersistent":
	[
		{
			"Alias" : "PropertyID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "\\see CGameObjectProperty::GetPropertyID()",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyModuleOwner":
	[
		{
			"Alias" : "ModuleLimit",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns count of unlocked building module slots",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ModuleCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "this only includes working modules",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ModuleCountBP",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"includeBlueprints" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ModuleCountIncludingPreview",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns count of built building modules, only working ones",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DefaultModuleGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyMonument":
	[
		{
			"Alias" : "FillStorage",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CycleTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RelativeCycleTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Progress",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Productivity",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductivityUpgrade",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NewspaperProductivityIncrease",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns productivity increase by newspaper effects, e.g. 0.2 for +20%",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FullOutputStorage",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentProductivity",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the productivity at right this instant. For most purposes, use GetProductivity instead, which includes delay effects.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NoWarehouseInRange",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if there is not a single connection to a warehouse the range of this factory",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeededFertility",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeedsAFertility",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasNeededFertility",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleCheatFertility",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EconomyModifier",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"modifier" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "UpgradeTarget",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeededProduct",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AvailableProduct",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RemainingTime",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Gets the time needed for the upgrade if all goods are available",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PauseUpgrade",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "pause the simulated upgrade",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsInConstructionState",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"state" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatUpgradeMicro",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "finish current micro phase",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatMicroPhase",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "force start current micro phase",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentPhase",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "get upgrade level",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MaxPhase",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "get highest possible upgrade level",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RemainingEventTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatSkipEventTime",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EventWorkforce",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EventWorkforceUsed",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EventGoodsRange",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"eventGUID" :
				{
					"Type" : "int"
				},
				"requirementGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "EventWorkforceByGUID",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"eventGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "EventMaxUsableWorkforceAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"eventGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "EventWorkforceUsedByGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"eventGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PossibleEventGoods",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{
				"requirementGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "EventGoodsReductionPercent",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"eventGUID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPropertyNameable":
	[
		{
			"Alias" : "Name",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Set the Name (if empty it will be generated)",
			"Arguments" :
			{
				"name" :
				{
					"Type" : "rdsdk::CRDStringW"
				}
			}
		},
		{
			"Alias" : "Name",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the VehicleName",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyPausable":
	[
		{
			"Alias" : "IsPaused",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TogglePause",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyPirate":
	[
		{
			"Alias" : "DebugIncreaseAreaOfActivityRange",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"additionalRadius" :
				{
					"Type" : "float"
				}
			}
		}
	],
	"CPropertyRepairCrane":
	[
		{
			"Alias" : "RepairAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NewspaperProductivityIncrease",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns healing increase by newspaper effects, e.g. 0.2 for +20%.",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyResidence7":
	[
		{
			"Alias" : "PopulationLevel",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResidentMax",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResidentCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatFill",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Occupancy",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Satisfaction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Satisfaction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "SetSatisfaction",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"satisfaction" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "SatisfactionTrend",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SatisfactionTrend",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "Happiness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HappinessByNeeds",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HappinessWorkingCondition",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EconomyModifier",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nEconomy Modifiers",
			"Arguments" :
			{
				"modifier" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "EconomyModifier",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"modifier" :
				{
					"Type" : "int"
				},
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "MoneyOutput",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nOutput information",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "WorkforceOutput",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentHappinessForGood",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nSupply information",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CurrentSupplyForGood",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CurrentMoneyForGood",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "money per minute this residence building produces currently",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MaxHappinessForGood",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MaxSupplyForGood",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MaxMoneyForGood",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Max money per minute this residence building produces when it\'s full",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MaxInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nInfluence generation",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Influence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertySelection":
	[
		{
			"Alias" : "IsSelected",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nSelection\nGets / Sets the selection flag.",
			"Arguments" :
			{

			}
		}
	],
	"CPropertySellable":
	[
		{
			"Alias" : "OnSale",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"sale" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "OnSale",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "if a ship is on sale it becomes an infolayer on top of it and\ncan be bought by any of the allowedBuyers.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AffordableByCurrentParticipant",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentParticipantBuyPrice",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SellPrice",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CanBeSoldToTrader",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatBuy",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuyNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"participantIndex" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPropertyShipIncident":
	[
		{
			"Alias" : "ActiveIncidentType",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsInfected",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "< returns true if the ship is infected by any incident",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatInfect",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"incidentType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatInfectRandom",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatEndInfection",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"incidentType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatEndAnyInfection",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatIgnoreIncidentPriority",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"val" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ToggleDebugRenderRadius",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RemainingDuration",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyShipMaintenance":
	[
		{
			"Alias" : "Maintenance",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyShipyard":
	[
		{
			"Alias" : "CurrentConstructionGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nCurrent Selected Construction Data",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsCurrentConstructionGUID",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Progress",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ConstructionTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RemainingRelativeTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuildCostForShip",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "",
			"Arguments" :
			{
				"shipGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NewspaperProductivityIncrease",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns productivity increase by newspaper effects, e.g. 0.2 for +20%. Construction time will be decreased by 20% in this example",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatSkipRemainingTime",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyTrader":
	[
		{
			"Alias" : "RerollCosts",
			"IsStatic" : "false",
			"ReturnType" : "SharedPtr<CBuildCost>",
			"Comment" : "Returns the costs to reroll goods and items",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ClearSellCooldown",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Clear the cooldown for the given slot index.",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ShipTradeFailed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "The ShipBuy or ShipSell Request has been declined by the player",
			"Arguments" :
			{
				"decliningParticipant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ForceBuild",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "produces next ship",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OfferFlagshipReplacement",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "offers the given player a flagship for sale",
			"Arguments" :
			{
				"targetPlayer" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "OfferFlagshipReplacementWithdraw",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "if this trader offers the given player a flagship the offers is removed",
			"Arguments" :
			{
				"targetPlayer" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPropertyTradeRouteVehicle":
	[
		{
			"Alias" : "RouteName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the name of the current route. Empty when no route assigned",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsPaused",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this ship is currently paused on the route",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyVisitorHarbor":
	[
		{
			"Alias" : "AreaVisitors",
			"IsStatic" : "false",
			"ReturnType" : "CAreaVisitors",
			"Comment" : "Access helper methods",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyWalking":
	[
		{
			"Alias" : "DebugGoto",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"x" :
				{
					"Type" : "float"
				},
				"z" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "DebugStop",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UnsetIdleTickCount",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsMoving",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if an object is currently moving",
			"Arguments" :
			{
				"queryUnitState" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "BaseSpeedWithUpgrades",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the speed of the ship including all current upgrades, excluding wind, cargo & damage factors.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BaseSpeedWithUpgrades_MaxWindSlowdown",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the speed of the ship including all current upgrades with maximum wind opposing to the ship",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BaseSpeedWithUpgrades_MaxWindSpeedup",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the speed of the ship including all current upgrades with maximum wind in favor of the ship",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AffectedByWind",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this object reacts to wind",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyWarehouse":
	[
		{
			"Alias" : "StorageBonus",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the storage bonus this building provides. BasicIslandStorage is included on kontors",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StrategicGood",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the storable good if there is only one (coal/oil harbour)",
			"Arguments" :
			{

			}
		}
	],
	"CQueenAttackFleet":
	[
		{
			"Alias" : "StartNewAttack",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Starts a new attack. Timer will be initialized to spawn first wave after a configured time",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SpawnNext",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Spawns the next wave immediately",
			"Arguments" :
			{

			}
		}
	],
	"CQueenParticipantData":
	[
		{
			"Alias" : "AttackFleet",
			"IsStatic" : "false",
			"ReturnType" : "CQueenAttackFleet",
			"Comment" : "Returns the controller for the attack fleet",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Taxes",
			"IsStatic" : "false",
			"ReturnType" : "CQueenTaxesController",
			"Comment" : "Returns the controller for the taxes",
			"Arguments" :
			{

			}
		}
	],
	"CQueenTaxesController":
	[
		{
			"Alias" : "SkipTimer",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Skips the time left until the queen asks for taxes. Should only used as a cheat",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AcceptTaxes",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Pays the current taxes and increases the reputation",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DenyTaxes",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Denies the current taxes and decreases the reputation",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CanPayTaxes",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the user has enough money to pay the taxes",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentTaxes",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the taxes the user has to pay",
			"Arguments" :
			{

			}
		}
	],
	"CQuestInstance":
	[
		{
			"Alias" : "ActiveNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Sets the quest state to: active",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StateReachable",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Sets the quest state to: reachable",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ReachedNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Sets the quest state to: reached\n\\param forceNoClaim true if the quest should be reached and not reachable if there is an reward to claim",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FailedNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Sets the quest state to: failed",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AbortedNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Sets the quest state to: aborted",
			"Arguments" :
			{
				"isManually" :
				{
					"Type" : "bool"
				},
				"abortReason" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the quest is active",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasEnded",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the quest state is any of the ending states FAILED, REACHED, etc..",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TimeLeft",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "Returns the remaining time of this quest if there is a time limit",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleForceQuestTrackerVisibility",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Toggles the current quest tracker visibility",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleQuestConditionTreeVisibility",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Toggles the current condition tree visibility",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "QuestStoryText",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the story text GUID of this quest",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "QuestDescriptionText",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the story text GUID of this quest",
			"Arguments" :
			{

			}
		}
	],
	"CQuestManager":
	[
		{
			"Alias" : "Quests",
			"IsStatic" : "true",
			"ReturnType" : "CQuestManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StartQuestForCurrentPlayerNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Does the same as StartQuest(int questGUID) or StartQuestLine(int questLineGUID) depending on the given GUID but without return value and for the currently active session",
			"Arguments" :
			{
				"questGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ResetTutorialQuestsNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Quest",
			"IsStatic" : "false",
			"ReturnType" : "CQuestInstance",
			"Comment" : "Returns the quest with the given ID.",
			"Arguments" :
			{
				"questID" :
				{
					"Type" : "QuestID"
				}
			}
		},
		{
			"Alias" : "TriggerQuestConfirmationAcceptedNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Send the quest confirmation event for a given questID",
			"Arguments" :
			{
				"questID" :
				{
					"Type" : "QuestID"
				}
			}
		},
		{
			"Alias" : "DebugQuestGUID",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Sets the debug quest GUID for the debug page",
			"Arguments" :
			{
				"val" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DebugParticipant",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"newDebugParticipantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReachSelectedQuest",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Reaches the quest that is currently visible in the quest tracker",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatEndPoolCooldownNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Forces a quest pool cooldown to end immediately",
			"Arguments" :
			{
				"poolGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatEndQuestBlockingNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Forces a quest pool to stop a quest blocking",
			"Arguments" :
			{
				"poolGUID" :
				{
					"Type" : "int"
				},
				"questGUID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CRecordingManager":
	[
		{
			"Alias" : "PlaybackDebugLog",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Adds some logging information",
			"Arguments" :
			{
				"lineNumber" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReplayFilename",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "Returns the name of the currently running replay file",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Records",
			"IsStatic" : "true",
			"ReturnType" : "CRecordingManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CRecordingPlayer":
	[
		{
			"Alias" : "PlaybackDebugLog",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Adds some logging information",
			"Arguments" :
			{
				"lineNumber" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReplayFilename",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "Returns the name of the currently running replay file",
			"Arguments" :
			{

			}
		}
	],
	"CRegrowManager":
	[
		{
			"Alias" : "Regrow",
			"IsStatic" : "true",
			"ReturnType" : "CRegrowManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CRenovatabilityChecker":
	[
		{
			"Alias" : "IsRenovatable",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Costs",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Reasons",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CNotRenovatableContext>",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CRewardsManager":
	[
		{
			"Alias" : "Rewards",
			"IsStatic" : "true",
			"ReturnType" : "CRewardsManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsClubReward",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CSelectionGroupController":
	[
		{
			"Alias" : "Store",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Stores the current selection under the given group id",
			"Arguments" :
			{
				"groupID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Restore",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Restores the selection of a given group id. If the selection was already selected, camera will jump to the group",
			"Arguments" :
			{
				"groupID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsEmpty",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the given group not exists or is empty",
			"Arguments" :
			{
				"groupID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GroupSize",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the amount of objects in the given group",
			"Arguments" :
			{
				"groupID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Group",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CGameObject>",
			"Comment" : "Returns all ships of the given group as vector",
			"Arguments" :
			{
				"groupID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GroupSortedToType",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CTextSourceListValue>",
			"Comment" : "Returns all type of ships of the given group. Values gives the number of ships",
			"Arguments" :
			{
				"groupID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GroupID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the ID of the group that contains the given object. Returns -1 if the object is not in any group",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "GameObjectID"
				}
			}
		}
	],
	"CSelectionManager":
	[
		{
			"Alias" : "Selection",
			"IsStatic" : "true",
			"ReturnType" : "CSelectionManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Picked",
			"IsStatic" : "false",
			"ReturnType" : "CGameObject",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Objects",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CGameObject>",
			"Comment" : "Returns the list of selected objects",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Object",
			"IsStatic" : "false",
			"ReturnType" : "CGameObject",
			"Comment" : "Returns a selected object from the list of selected objects. If there are multiple objects in the list it is undefined which will be returned.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ContainsWarship",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the selection contains at least one warship",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SelectIslandKontor",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "select any building with the specific GUID",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SelectionGroup",
			"IsStatic" : "false",
			"ReturnType" : "CSelectionGroupController",
			"Comment" : "Returns the SelectionGroupController to store or restore selection groups",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UpgradeSelected",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"all" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "DestructSelected",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TogglePauseForBuildingsOfSelectedType",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ChangeParticipantOfSelected",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CSessionCameraManager":
	[
		{
			"Alias" : "SessionCamera",
			"IsStatic" : "true",
			"ReturnType" : "CSessionCameraManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToWorldPos",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "helper methods for Textsource to look at a certain worldPosition",
			"Arguments" :
			{
				"x" :
				{
					"Type" : "float"
				},
				"y" :
				{
					"Type" : "float"
				},
				"z" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "ToWorldPos",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "helper methods for Textsource to look at a certain worldPosition\nthe y coordinate will be the terrain height.",
			"Arguments" :
			{
				"x" :
				{
					"Type" : "float"
				},
				"z" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "CheatToGameObject",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "this is not the best as it uses call in thread to ensure it\'s called",
			"Arguments" :
			{
				"objectID" :
				{
					"Type" : "rduint64"
				}
			}
		}
	],
	"CSessionCoastManager":
	[
		{
			"Alias" : "AreaCoast",
			"IsStatic" : "true",
			"ReturnType" : "CSessionCoastManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CSessionFreeAreaProductivityManager":
	[
		{
			"Alias" : "FreeAreaProductivity",
			"IsStatic" : "true",
			"ReturnType" : "CSessionFreeAreaProductivityManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CSessionParticipantManager":
	[
		{
			"Alias" : "SessionParticipants",
			"IsStatic" : "true",
			"ReturnType" : "CSessionParticipantManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GetParticipant",
			"IsStatic" : "false",
			"ReturnType" : "CGameObject",
			"Comment" : "Returns GameObject belonging to given ParticipantID",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatCreateSessionParticipant",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Only to be used for cheat!",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CSessionRandomManager":
	[
		{
			"Alias" : "Random",
			"IsStatic" : "true",
			"ReturnType" : "CSessionRandomManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GenerateSequence",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GenerationAmount",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"amount" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "GenerationGranularity",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"granularity" :
				{
					"Type" : "float"
				}
			}
		}
	],
	"CSessionShareManager":
	[
		{
			"Alias" : "Share",
			"IsStatic" : "true",
			"ReturnType" : "CSessionShareManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TotalShareIncome",
			"IsStatic" : "true",
			"ReturnType" : "float",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nShare Ownership",
			"Arguments" :
			{

			}
		}
	],
	"CSessionTradeRoute":
	[
		{
			"Alias" : "Station",
			"IsStatic" : "false",
			"ReturnType" : "CSessionTradeRouteStationInfo",
			"Comment" : "Returns the route with the given id",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				}
			}
		},
		{
			"Alias" : "IsErrorActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"errorType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NotEnoughSlotsErrorActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"slotIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NotEnoughSlotsForShipsErrorActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"shipID" :
				{
					"Type" : "rdgs::MetaGameObjectID"
				}
			}
		},
		{
			"Alias" : "NotEnoughStationsActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IslandUnderSiegeActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				}
			}
		},
		{
			"Alias" : "NoValidPierActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				}
			}
		},
		{
			"Alias" : "NoTradeRightsActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				}
			}
		},
		{
			"Alias" : "ConfiguredGoodNotTradedActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				},
				"goodID" :
				{
					"Type" : "GoodTradeID"
				}
			}
		},
		{
			"Alias" : "LoadedGoodNeverUnloadedActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				},
				"goodID" :
				{
					"Type" : "GoodTradeID"
				}
			}
		},
		{
			"Alias" : "UnloadedGoodNeverLoadedActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				},
				"goodID" :
				{
					"Type" : "GoodTradeID"
				}
			}
		},
		{
			"Alias" : "GoodsDontMatchActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				},
				"goodID" :
				{
					"Type" : "GoodTradeID"
				}
			}
		},
		{
			"Alias" : "StorageFullActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				},
				"goodID" :
				{
					"Type" : "GoodTradeID"
				}
			}
		},
		{
			"Alias" : "StorageEmptyActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				},
				"goodID" :
				{
					"Type" : "GoodTradeID"
				}
			}
		},
		{
			"Alias" : "NoGoodsActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NoShipsActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AllShipsPausedActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LongWaitingTimeActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				}
			}
		},
		{
			"Alias" : "ActiveErrorCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns how many errors are currently active. If checkAllErrors are false, some errors are skipped that should not be displayed in the UI",
			"Arguments" :
			{
				"checkAllErrors" :
				{
					"Type" : "bool"
				}
			}
		}
	],
	"CSessionTradeRouteGoodInfo":
	[
		{
			"Alias" : "Loading",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "True if a good is loaded. False if unloaded",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Gets/Sets the ProductGUID",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Gets/Sets the amount of the good to transfer",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GoodData",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CSessionTradeRouteStationInfo":
	[
		{
			"Alias" : "Good",
			"IsStatic" : "false",
			"ReturnType" : "CSessionTradeRouteGoodInfo",
			"Comment" : "Returns the info about a good trade with the given id",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "HasGood",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if a GoodInfo object with the given id exists",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "StationBelongsToCurrentParticipant",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentParticipantHasTradeRights",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CSessionTransferManager":
	[
		{
			"Alias" : "SessionTransfer",
			"IsStatic" : "true",
			"ReturnType" : "CSessionTransferManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsTransfering",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if an object with the given id is waiting for it\'s transfer",
			"Arguments" :
			{
				"objectID" :
				{
					"Type" : "MetaGameObjectID"
				}
			}
		},
		{
			"Alias" : "TransferTimeLeft",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "Returns the time left until the transfer is fulfilled",
			"Arguments" :
			{
				"objectID" :
				{
					"Type" : "MetaGameObjectID"
				}
			}
		},
		{
			"Alias" : "TargetSession",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the guid of the target session of the given object",
			"Arguments" :
			{
				"objectID" :
				{
					"Type" : "MetaGameObjectID"
				}
			}
		}
	],
	"CShipFleet":
	[
		{
			"Alias" : "Ships",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<GameObjectID>",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CSoundManager":
	[
		{
			"Alias" : "Sound",
			"IsStatic" : "true",
			"ReturnType" : "CSoundManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PlayCameraSoundEffect",
			"IsStatic" : "false",
			"ReturnType" : "unsigned int",
			"Comment" : "Use for camera sequences to play global sound effects.",
			"Arguments" :
			{
				"soundGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "StopCameraSoundEffect",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Use for camera sequences to stop global sound effects started with playCamera.",
			"Arguments" :
			{
				"soundGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleProfiling",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleAdvancedDebug",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleGlobalPersistentEvents",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleDebugFlag",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"flag" :
				{
					"Type" : "rduint"
				}
			}
		},
		{
			"Alias" : "DebugEmitterFilter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"string" :
				{
					"Type" : "rdsdk::CRDString"
				}
			}
		},
		{
			"Alias" : "ResetDebugEmitterFilter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatPlaySound",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CStreetOverlayManager":
	[
		{
			"Alias" : "StreetOverlay",
			"IsStatic" : "true",
			"ReturnType" : "CStreetOverlayManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DebugCommand",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"command" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleDebugOption",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"option" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleInfoLayerVisibility",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CTargetManager":
	[
		{
			"Alias" : "Target",
			"IsStatic" : "true",
			"ReturnType" : "CTargetManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DestructionPayback",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DestructionCosts",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UpgradeCosts",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsBlueprint",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CTextManager":
	[
		{
			"Alias" : "Text",
			"IsStatic" : "true",
			"ReturnType" : "CTextManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ValidateAllTexts",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CTextSourceListValue":
	[
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Icon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Text",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Value",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CTextSourceObjectWrapper":
	[
		{
			"Alias" : "IsInt",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsObject",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsArea",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Int",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Object",
			"IsStatic" : "false",
			"ReturnType" : "CGameObject",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Area",
			"IsStatic" : "false",
			"ReturnType" : "CConstructionArea",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CTextSourceUtility":
	[
		{
			"Alias" : "AssetForValue",
			"IsStatic" : "true",
			"ReturnType" : "CAsset",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nUtility",
			"Arguments" :
			{
				"mappingGUID" :
				{
					"Type" : "int"
				},
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "Not",
			"IsStatic" : "true",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "Greater",
			"IsStatic" : "true",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"greater" :
				{
					"Type" : "float"
				},
				"smaller" :
				{
					"Type" : "float"
				}
			}
		}
	],
	"CToolOneTextHelper":
	[
		{
			"Alias" : "ToolOneHelper",
			"IsStatic" : "true",
			"ReturnType" : "CToolOneTextHelper",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfoDescription",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ProductCategory",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "BuildingCategory",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ConstructionCategoryDescription",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Attractiveness",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemBuffs",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemBuffsSpecial",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemRarity",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemRarityColor",
			"IsStatic" : "false",
			"ReturnType" : "rduint",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsItemRarityQuest",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExpeditionItemFluff",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemNeedsElectricity",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemExclusiveGroup",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemHasExclusiveGroup",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemAllocation",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemHasAllocation",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemIsSpecialist",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemActionDescription",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "HasItemActionDescription",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemCooldown",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemDuration",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "BarrageDuration",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemIsDestroyedAfterCooldown",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemActiveBuff",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemSet",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemSetItems",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<int>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemIsActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemOrBuffEffectTargets",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<int>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemHasExpeditionAttribute",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"getTraits" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ItemExpeditionAttributes",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"getTraits" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ExpeditionThreatAttributes",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExpeditionThreatFirstAttribute",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemExpeditionThreats",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IncidentResolverUnitsForTargetBuildings",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<int>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"specialUnits" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "KamikazeItemDamageForSelected",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "BuildCost",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "BuildCosts",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "BuildCostSelected",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExpeditionName",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"expeditionGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExpeditionDifficulty",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"expeditionGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExpeditionRegion",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"expeditionGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "UnlockRequirements",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SlotAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SocketAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "HitPoints",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AttackDamage",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReloadTimeInMS",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DPS",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ShipMaintenance",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"shipguid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SelectionAggresive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SelectionDefensive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SelectionStandGround",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SelectionMixedStance",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GroupSelectionStayTogether",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GroupSelectionMoveIndividually",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GroupSelectionMixed",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MaxPopulationNeededForUnlocks",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemTradePrice",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"itemGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ProductBasePrice",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "StartProducts",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				},
				"difficulty" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "BaseShareInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CTradeOfferInfo":
	[
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Price",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EndlessAmount",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CTradeRouteManager":
	[
		{
			"Alias" : "TradeRoute",
			"IsStatic" : "true",
			"ReturnType" : "CTradeRouteManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Route",
			"IsStatic" : "false",
			"ReturnType" : "CSessionTradeRoute",
			"Comment" : "Returns a trade route with the given id",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "TradeRouteID"
				}
			}
		},
		{
			"Alias" : "ShowRouteUI",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Opens the given route in the UI",
			"Arguments" :
			{
				"routeID" :
				{
					"Type" : "TradeRouteID"
				}
			}
		},
		{
			"Alias" : "UIEditRoute",
			"IsStatic" : "false",
			"ReturnType" : "CSessionTradeRoute",
			"Comment" : "Gets/Sets the route which is currently edited in the UI. We don\'t take any ownership here",
			"Arguments" :
			{

			}
		}
	],
	"CTransporterQueue":
	[
		{
			"Alias" : "Queued",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProcessingMax",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Processing",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CUIBindings":
	[
		{
			"Alias" : "Interface",
			"IsStatic" : "true",
			"ReturnType" : "CUIBindings",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TogglePostcardView",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleRotatingCameraView",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"slot" :
				{
					"Type" : "int"
				},
				"speed" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "ToggleUI",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopUI",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleMetaUI",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleBuildmenu",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleShipList",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EnterState",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"stateID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CUnlockManager":
	[
		{
			"Alias" : "Unlock",
			"IsStatic" : "true",
			"ReturnType" : "CUnlockManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Unlock",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Makes a GUID available for use",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsUnlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this GUID is available for use",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Relock",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Makes a GUID unavailable for use",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CUpgradabilityChecker":
	[
		{
			"Alias" : "IsUpgradable",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UpgradeCosts",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "Returns the total costs for the upgrades",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Reasons",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CNotUpgradableContext>",
			"Comment" : "Returns the reasons and values why the building cannot be upgraded",
			"Arguments" :
			{

			}
		}
	],
	"CVisitorManager":
	[
		{
			"Alias" : "Visitors",
			"IsStatic" : "true",
			"ReturnType" : "CVisitorManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Area",
			"IsStatic" : "false",
			"ReturnType" : "CAreaVisitors",
			"Comment" : "",
			"Arguments" :
			{
				"area" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ResetArea",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"area" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleDebugFlag",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"flag" :
				{
					"Type" : "rduint"
				}
			}
		}
	],
	"CWeatherManager":
	[
		{
			"Alias" : "Weather",
			"IsStatic" : "true",
			"ReturnType" : "CWeatherManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ChangeWind",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleWindRender",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Toggles debug rendering of wind-speedups for ships",
			"Arguments" :
			{

			}
		}
	],
	"CWinLoseManager":
	[
		{
			"Alias" : "WinLose",
			"IsStatic" : "true",
			"ReturnType" : "CWinLoseManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DefeatCurrentPlayer",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LoseCurrentPlayer",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "WinCurrentPlayer",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CWorkforceIslandTransfer":
	[
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SourceArea",
			"IsStatic" : "false",
			"ReturnType" : "CConstructionArea",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TargetArea",
			"IsStatic" : "false",
			"ReturnType" : "CConstructionArea",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CWorkforceMap":
	[
		{
			"Alias" : "Production",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"workforceGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Consumption",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"workforceGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Balance",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"workforceGuid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CWorkforceTransferManager":
	[
		{
			"Alias" : "WorkforceTransferManager",
			"IsStatic" : "true",
			"ReturnType" : "CWorkforceTransferManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsAddedToWorkforcePool",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "returns true if the given area is part of a workforce pool (means there is an workforce connector build on that area)",
			"Arguments" :
			{
				"areaID" :
				{
					"Type" : "AreaID"
				}
			}
		},
		{
			"Alias" : "HasActiveWorkforcePool",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "returns true if the workforce pool is active (has at least 2 functional workforce connectors)",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AvailableWorkforce",
			"IsStatic" : "false",
			"ReturnType" : "CWorkforceMap",
			"Comment" : "if a workforce transfer has been established, this method returns the sum of the available workforce balances of all areas\nif there is no workforce transfer, the local workforce balance of the given area will be returned",
			"Arguments" :
			{
				"areaID" :
				{
					"Type" : "AreaID"
				}
			}
		},
		{
			"Alias" : "TransferedWorkforce",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns the amount of workforce this area is importing or exporting",
			"Arguments" :
			{
				"areaID" :
				{
					"Type" : "AreaID"
				},
				"workforceGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IslandTransfers",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CWorkforceIslandTransfer>",
			"Comment" : "Returns a vector with all transfers starting from the given area or have it as target\nIf no area is given, this method returns the transfers of the area of the selected object",
			"Arguments" :
			{
				"workforceGuid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "ProvidedWorkforceOnArea",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns the provided workforce on a given area. All transfers are subtracted",
			"Arguments" :
			{
				"areaID" :
				{
					"Type" : "AreaID"
				},
				"workforceGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "EmployedWorkforceOnArea",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns the employed workforce on a given area. All transfers are subtracted",
			"Arguments" :
			{
				"areaID" :
				{
					"Type" : "AreaID"
				},
				"workforceGuid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CWorldMapSessionManager":
	[
		{
			"Alias" : "WorldMap",
			"IsStatic" : "true",
			"ReturnType" : "CWorldMapSessionManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Fleet",
			"IsStatic" : "false",
			"ReturnType" : "CShipFleet",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"Global":
	[

	],
	"IConditionEvent":
	[
		{
			"Alias" : "ConditionKey",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "Returns a unique string identifier for this condition",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SatisfyRecursiveNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Satisfies this condition and all subconditions",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolved",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the condition and all subconditions are resolved",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolvedSelf",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this condition has ended",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get / Set the call amount",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the current call amount",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the template event data as a string for the UI",
			"Arguments" :
			{

			}
		}
	],
	"IIncident":
	[
		{
			"Alias" : "CheatSpread",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"ILogisticNode":
	[
		{
			"Alias" : "TransporterQueue",
			"IsStatic" : "false",
			"ReturnType" : "UniquePtr<CTransporterQueue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"IncidentResolverState":
	[
		{
			"Alias" : "IsIdle",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsOnTheWay",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsHealing",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"INotification":
	[
		{
			"Alias" : "Value",
			"IsStatic" : "false",
			"ReturnType" : "CTextSourceObjectWrapper",
			"Comment" : "",
			"Arguments" :
			{
				"key" :
				{
					"Type" : "rdsdk::CRDStringW"
				}
			}
		}
	],
	"VirtualSpaceBuildCost":
	[
		{
			"Alias" : "FromGuid",
			"IsStatic" : "false",
			"ReturnType" : "SharedPtr<CBuildCost>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceBuilding":
	[
		{
			"Alias" : "IsAllowedInCurrentRegion",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "returns true if the user is allowed to build the given building in the region of the active session",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AllowedInRegion",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the given building associated with the given region",
			"Arguments" :
			{
				"regionIndex" :
				{
					"Type" : "int"
				},
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NeededSlotType",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns slot type to which the given building guid needs to snap to",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TerrainType",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns terrain type of the given building guid",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "KontorSwitchCosts",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the switch costs of kontor to imperial kontor",
			"Arguments" :
			{

			}
		}
	],
	"VirtualSpaceDistribution":
	[
		{
			"Alias" : "Amounts",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CProductAsset>",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nStaticData",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceElectricity":
	[
		{
			"Alias" : "NeedsElectricity",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CanBeBoostedByElectricity",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceExpedition":
	[
		{
			"Alias" : "OptionAttribute",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"optionGUID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceFactory":
	[
		{
			"Alias" : "Inputs",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CProductAmount>",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nStatic Data",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Outputs",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CProductAmount>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CycleTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NeededFertility",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CurrentAreaHasNeededFertility",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsPowerplant",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceMaintenance":
	[
		{
			"Alias" : "PopulationLevel",
			"IsStatic" : "false",
			"ReturnType" : "CPopulationAsset",
			"Comment" : "",
			"Arguments" :
			{
				"assetGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Workforce",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"assetGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Costs",
			"IsStatic" : "false",
			"ReturnType" : "PoolPtr<Vector>",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nTextsource",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceResidence":
	[
		{
			"Alias" : "MoveInThreshold",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nStatic Data",
			"Arguments" :
			{
				"populationLevelGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MoveOutThreshold",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"populationLevelGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "UpgradeThreshold",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"populationLevelGUID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceStaticData":
	[
		{
			"Alias" : "StaticData",
			"IsStatic" : "true",
			"ReturnType" : "VirtualSpaceStaticData",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuildCost",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceBuildCost",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Expedition",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceExpedition",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Building",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceBuilding",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Distribution",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceDistribution",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Electricity",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceElectricity",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Factory",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceFactory",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Maintenance",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceMaintenance",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Residence",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceResidence",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Warehouse",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceWarehouse",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"VirtualSpaceWarehouse":
	[
		{
			"Alias" : "StorageBonus",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "///////////////////////////////////////////////////////////////////////\nStatic Data",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "StrategicGood",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	]}
